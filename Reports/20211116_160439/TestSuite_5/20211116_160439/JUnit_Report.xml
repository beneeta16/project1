<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="TestSuite_5" time="690.966" tests="5" failures="0" errors="0">
   <testsuite name="TestSuite_5" tests="5" failures="0" errors="0" time="690.966" skipped="0" timestamp="2021-11-16 16:04:52" hostname="HP - LAPTOP-EDP04F0V" id="Test Suites/TestSuite_5">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\HP\\Katalon Studio\\Project_1\\Reports\\20211116_160439\\TestSuite_5\\20211116_160439"/>
         <property name="logFiles" value="C:\\Users\\HP\\Katalon Studio\\Project_1\\Reports\\20211116_160439\\TestSuite_5\\20211116_160439\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="HP - LAPTOP-EDP04F0V"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="8.1.0.208"/>
         <property name="browser" value="Chrome 95.0.4638.69"/>
         <property name="hostAddress" value="192.168.56.1"/>
         <property name="sessionId" value="50da1603a05317cdde485a06d484f52d"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Windows 10"/>
      </properties>
      <testcase name="Test Cases/TC-01-VerifyLogin" time="31.409" classname="Test Cases/TC-01-VerifyLogin" status="PASSED">
         <system-out><![CDATA[2021-11-16 16:04:52 - [TEST_CASE][PASSED] - Test Cases/TC-01-VerifyLogin: Test Cases/TC-01-VerifyLogin

2021-11-16 16:04:52 - [TEST_STEP][PASSED] - openBrowser(findTestData("Login_Credentials").getValue("Input URL", 1)): Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:04:53 - [MESSAGE][INFO] - Starting 'Chrome' driver

2021-11-16 16:04:53 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2021-11-16 16:05:01 - [MESSAGE][PASSED] - Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:05:01 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/UserName_Field"), findTestData("Login_Credentials").getValue("User Name", 1)): Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:05:04 - [MESSAGE][PASSED] - Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:05:04 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/Password_Field"), findTestData("Login_Credentials").getValue("Password", 1)): Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:05:05 - [MESSAGE][PASSED] - Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:05:05 - [TEST_STEP][PASSED] - click(findTestObject("Login_OR/Login_Button_Field")): Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:05:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:05:21 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Login_OR/UserLogo"), 0): Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:05:21 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2021-11-16 16:05:23 - [MESSAGE][PASSED] - Object 'Object Repository/Login_OR/UserLogo' is present]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TC-02-VerifyHomePageOptions" time="194.301" classname="Test Cases/TC-02-VerifyHomePageOptions" status="PASSED">
         <system-out><![CDATA[2021-11-16 16:05:23 - [TEST_CASE][PASSED] - Test Cases/TC-02-VerifyHomePageOptions: Test Cases/TC-02-VerifyHomePageOptions

2021-11-16 16:05:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TC-01-VerifyLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/TC-01-VerifyLogin' successfully

2021-11-16 16:05:26 - [TEST_CASE][PASSED] - Test Cases/TC-01-VerifyLogin: Test Cases/TC-01-VerifyLogin

2021-11-16 16:05:26 - [TEST_STEP][PASSED] - openBrowser(findTestData("Login_Credentials").getValue("Input URL", 1)): Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:05:26 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2021-11-16 16:05:27 - [MESSAGE][INFO] - Starting 'Chrome' driver

2021-11-16 16:05:27 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2021-11-16 16:05:33 - [MESSAGE][PASSED] - Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:05:33 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/UserName_Field"), findTestData("Login_Credentials").getValue("User Name", 1)): Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:05:35 - [MESSAGE][PASSED] - Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:05:35 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/Password_Field"), findTestData("Login_Credentials").getValue("Password", 1)): Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:05:36 - [MESSAGE][PASSED] - Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:05:36 - [TEST_STEP][PASSED] - click(findTestObject("Login_OR/Login_Button_Field")): Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:05:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:05:52 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Login_OR/UserLogo"), 0): Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:05:52 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2021-11-16 16:05:54 - [MESSAGE][PASSED] - Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:05:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TC-01-VerifyLogin' successfully

2021-11-16 16:05:54 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("DropDown_OR/Dropdown_Box_Position"), "All Content"): Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:05:54 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:05:54 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:55 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - listItem = new java.util.ArrayList(): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - listItem.add("All"): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - listItem.add("All Content"): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - listItem.add("Product Manuals"): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - listItem.add("Articles and AppNotes"): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - listItem.add("Training Courses"): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - listItem.add("Community"): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - listItem.add("Cases"): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - dropdownItems = driver.findElements(By.xpath("//*[@id='standaloneSearchDropdown']/ul/li")): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - for ([i = 0, i < dropdownItems.size(), (i++)]): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - expecteditemText = listItem.get(i): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - actualitemText = get(i).getText(): null

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - isitemPresent = verifyMatch(actualitemText, expecteditemText, false): Actual text 'All' and expected text 'All' are matched 

2021-11-16 16:05:55 - [MESSAGE][PASSED] - Actual text 'All' and expected text 'All' are matched 

2021-11-16 16:05:55 - [TEST_STEP][PASSED] - out.println(isitemPresent): null

2021-11-16 16:05:56 - [TEST_STEP][PASSED] - get(i).click(): null

2021-11-16 16:05:56 - [TEST_STEP][PASSED] - isoptionSelected = verifyElementText(findTestObject("DropDown_OR/Dropdown_Box_Position"), expecteditemText): Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:05:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:05:56 - [TEST_STEP][PASSED] - out.println(isoptionSelected): null

2021-11-16 16:05:56 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:57 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:57 - [TEST_STEP][PASSED] - expecteditemText = listItem.get(i): null

2021-11-16 16:05:57 - [TEST_STEP][PASSED] - actualitemText = get(i).getText(): null

2021-11-16 16:05:57 - [TEST_STEP][PASSED] - isitemPresent = verifyMatch(actualitemText, expecteditemText, false): Actual text 'All Content' and expected text 'All Content' are matched 

2021-11-16 16:05:57 - [MESSAGE][PASSED] - Actual text 'All Content' and expected text 'All Content' are matched 

2021-11-16 16:05:57 - [TEST_STEP][PASSED] - out.println(isitemPresent): null

2021-11-16 16:05:57 - [TEST_STEP][PASSED] - get(i).click(): null

2021-11-16 16:05:57 - [TEST_STEP][PASSED] - isoptionSelected = verifyElementText(findTestObject("DropDown_OR/Dropdown_Box_Position"), expecteditemText): Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:05:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:05:57 - [TEST_STEP][PASSED] - out.println(isoptionSelected): null

2021-11-16 16:05:57 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:58 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:58 - [TEST_STEP][PASSED] - expecteditemText = listItem.get(i): null

2021-11-16 16:05:58 - [TEST_STEP][PASSED] - actualitemText = get(i).getText(): null

2021-11-16 16:05:58 - [TEST_STEP][PASSED] - isitemPresent = verifyMatch(actualitemText, expecteditemText, false): Actual text 'Product Manuals' and expected text 'Product Manuals' are matched 

2021-11-16 16:05:58 - [MESSAGE][PASSED] - Actual text 'Product Manuals' and expected text 'Product Manuals' are matched 

2021-11-16 16:05:58 - [TEST_STEP][PASSED] - out.println(isitemPresent): null

2021-11-16 16:05:58 - [TEST_STEP][PASSED] - get(i).click(): null

2021-11-16 16:05:58 - [TEST_STEP][PASSED] - isoptionSelected = verifyElementText(findTestObject("DropDown_OR/Dropdown_Box_Position"), expecteditemText): Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:05:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:05:58 - [TEST_STEP][PASSED] - out.println(isoptionSelected): null

2021-11-16 16:05:58 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:59 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:05:59 - [TEST_STEP][PASSED] - expecteditemText = listItem.get(i): null

2021-11-16 16:05:59 - [TEST_STEP][PASSED] - actualitemText = get(i).getText(): null

2021-11-16 16:05:59 - [TEST_STEP][PASSED] - isitemPresent = verifyMatch(actualitemText, expecteditemText, false): Actual text 'Articles and AppNotes' and expected text 'Articles and AppNotes' are matched 

2021-11-16 16:05:59 - [MESSAGE][PASSED] - Actual text 'Articles and AppNotes' and expected text 'Articles and AppNotes' are matched 

2021-11-16 16:05:59 - [TEST_STEP][PASSED] - out.println(isitemPresent): null

2021-11-16 16:05:59 - [TEST_STEP][PASSED] - get(i).click(): null

2021-11-16 16:05:59 - [TEST_STEP][PASSED] - isoptionSelected = verifyElementText(findTestObject("DropDown_OR/Dropdown_Box_Position"), expecteditemText): Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:06:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:06:00 - [TEST_STEP][PASSED] - out.println(isoptionSelected): null

2021-11-16 16:06:00 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:00 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:00 - [TEST_STEP][PASSED] - expecteditemText = listItem.get(i): null

2021-11-16 16:06:00 - [TEST_STEP][PASSED] - actualitemText = get(i).getText(): null

2021-11-16 16:06:00 - [TEST_STEP][PASSED] - isitemPresent = verifyMatch(actualitemText, expecteditemText, false): Actual text 'Training Courses' and expected text 'Training Courses' are matched 

2021-11-16 16:06:00 - [MESSAGE][PASSED] - Actual text 'Training Courses' and expected text 'Training Courses' are matched 

2021-11-16 16:06:00 - [TEST_STEP][PASSED] - out.println(isitemPresent): null

2021-11-16 16:06:00 - [TEST_STEP][PASSED] - get(i).click(): null

2021-11-16 16:06:00 - [TEST_STEP][PASSED] - isoptionSelected = verifyElementText(findTestObject("DropDown_OR/Dropdown_Box_Position"), expecteditemText): Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:06:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:06:01 - [TEST_STEP][PASSED] - out.println(isoptionSelected): null

2021-11-16 16:06:01 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:01 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:01 - [TEST_STEP][PASSED] - expecteditemText = listItem.get(i): null

2021-11-16 16:06:01 - [TEST_STEP][PASSED] - actualitemText = get(i).getText(): null

2021-11-16 16:06:01 - [TEST_STEP][PASSED] - isitemPresent = verifyMatch(actualitemText, expecteditemText, false): Actual text 'Community' and expected text 'Community' are matched 

2021-11-16 16:06:01 - [MESSAGE][PASSED] - Actual text 'Community' and expected text 'Community' are matched 

2021-11-16 16:06:01 - [TEST_STEP][PASSED] - out.println(isitemPresent): null

2021-11-16 16:06:01 - [TEST_STEP][PASSED] - get(i).click(): null

2021-11-16 16:06:01 - [TEST_STEP][PASSED] - isoptionSelected = verifyElementText(findTestObject("DropDown_OR/Dropdown_Box_Position"), expecteditemText): Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:06:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:06:02 - [TEST_STEP][PASSED] - out.println(isoptionSelected): null

2021-11-16 16:06:02 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:02 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:02 - [TEST_STEP][PASSED] - expecteditemText = listItem.get(i): null

2021-11-16 16:06:02 - [TEST_STEP][PASSED] - actualitemText = get(i).getText(): null

2021-11-16 16:06:02 - [TEST_STEP][PASSED] - isitemPresent = verifyMatch(actualitemText, expecteditemText, false): Actual text 'Cases' and expected text 'Cases' are matched 

2021-11-16 16:06:02 - [MESSAGE][PASSED] - Actual text 'Cases' and expected text 'Cases' are matched 

2021-11-16 16:06:02 - [TEST_STEP][PASSED] - out.println(isitemPresent): null

2021-11-16 16:06:02 - [TEST_STEP][PASSED] - get(i).click(): null

2021-11-16 16:06:02 - [TEST_STEP][PASSED] - isoptionSelected = verifyElementText(findTestObject("DropDown_OR/Dropdown_Box_Position"), expecteditemText): Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:06:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/DropDown_OR/Dropdown_Box_Position' are matched.

2021-11-16 16:06:03 - [TEST_STEP][PASSED] - out.println(isoptionSelected): null

2021-11-16 16:06:03 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:03 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:03 - [TEST_STEP][PASSED] - click(findTestObject("DropDown_OR/Dropdown_Box_Position")): Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:04 - [MESSAGE][PASSED] - Object: 'Object Repository/DropDown_OR/Dropdown_Box_Position' is clicked on

2021-11-16 16:06:04 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Searchbar_OR/Searchbar_position")): Object 'Object Repository/Searchbar_OR/Searchbar_position' is visible

2021-11-16 16:06:04 - [MESSAGE][PASSED] - Object 'Object Repository/Searchbar_OR/Searchbar_position' is visible

2021-11-16 16:06:04 - [TEST_STEP][PASSED] - isplaceholderPresent = verifyElementAttributeValue(findTestObject("Searchbar_OR/Searchbar_position"), "placeholder", "Start your search here...", 5): Object 'Object Repository/Searchbar_OR/Searchbar_position' has attribute 'placeholder' with value 'Start your search here...'

2021-11-16 16:06:05 - [MESSAGE][PASSED] - Object 'Object Repository/Searchbar_OR/Searchbar_position' has attribute 'placeholder' with value 'Start your search here...'

2021-11-16 16:06:05 - [TEST_STEP][PASSED] - out.println(isplaceholderPresent): null

2021-11-16 16:06:05 - [TEST_STEP][PASSED] - expectedTooltip = "Insert a query. Press enter to send": null

2021-11-16 16:06:05 - [TEST_STEP][PASSED] - actualTooltip = getAttribute(findTestObject("Searchbar_OR/Searchbar_position"), "title"): Attribute 'title' of object 'Object Repository/Searchbar_OR/Searchbar_position' is: 'Insert a query. Press enter to send'

2021-11-16 16:06:05 - [MESSAGE][PASSED] - Attribute 'title' of object 'Object Repository/Searchbar_OR/Searchbar_position' is: 'Insert a query. Press enter to send'

2021-11-16 16:06:05 - [TEST_STEP][PASSED] - istooltipTrue = verifyMatch(actualTooltip, expectedTooltip, true): Actual text 'Insert a query. Press enter to send' and expected text 'Insert a query. Press enter to send' are matched  using regular expression

2021-11-16 16:06:05 - [MESSAGE][PASSED] - Actual text 'Insert a query. Press enter to send' and expected text 'Insert a query. Press enter to send' are matched  using regular expression

2021-11-16 16:06:05 - [TEST_STEP][PASSED] - out.println(istooltipTrue): null

2021-11-16 16:06:05 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Searchbar_OR/MagnifyingGlass_Position")): Object 'Object Repository/Searchbar_OR/MagnifyingGlass_Position' is visible

2021-11-16 16:06:06 - [MESSAGE][PASSED] - Object 'Object Repository/Searchbar_OR/MagnifyingGlass_Position' is visible

2021-11-16 16:06:06 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Quick_Link_Section_OR/Quick_link_Section_location"), 5): Scroll to object 'Object Repository/Quick_Link_Section_OR/Quick_link_Section_location' successfully

2021-11-16 16:06:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Quick_Link_Section_OR/Quick_link_Section_location' successfully

2021-11-16 16:06:06 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Quick_Link_Section_OR/Installation_and_licensing_location")): Object 'Object Repository/Quick_Link_Section_OR/Installation_and_licensing_location' is visible

2021-11-16 16:06:07 - [MESSAGE][PASSED] - Object 'Object Repository/Quick_Link_Section_OR/Installation_and_licensing_location' is visible

2021-11-16 16:06:07 - [TEST_STEP][PASSED] - click(findTestObject("Quick_Link_Section_OR/Installation_and_licensing_location")): Object: 'Object Repository/Quick_Link_Section_OR/Installation_and_licensing_location' is clicked on

2021-11-16 16:06:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Quick_Link_Section_OR/Installation_and_licensing_location' is clicked on

2021-11-16 16:06:10 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:06:12 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:06:12 - [TEST_STEP][PASSED] - expectedTitle = "Installation, Licensing and Configuration": null

2021-11-16 16:06:12 - [TEST_STEP][PASSED] - actualTitle = getWindowTitle(): Current window's title is: 'Installation, Licensing and Configuration'

2021-11-16 16:06:12 - [MESSAGE][PASSED] - Current window's title is: 'Installation, Licensing and Configuration'

2021-11-16 16:06:12 - [TEST_STEP][PASSED] - verifyMatch(actualTitle, expectedTitle, true): Actual text 'Installation, Licensing and Configuration' and expected text 'Installation, Licensing and Configuration' are matched  using regular expression

2021-11-16 16:06:12 - [MESSAGE][PASSED] - Actual text 'Installation, Licensing and Configuration' and expected text 'Installation, Licensing and Configuration' are matched  using regular expression

2021-11-16 16:06:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/SearchCustomHeader_location"), "Installation, Licensing and Configuration"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:06:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:06:12 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:06:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:06:13 - [TEST_STEP][PASSED] - firstRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr/th")): null

2021-11-16 16:06:13 - [TEST_STEP][PASSED] - productrowColumn = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[1]/td[1]")): null

2021-11-16 16:06:13 - [TEST_STEP][PASSED] - thirdRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - documentColumn = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[2]")): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - totalcms = productrowColumn.size(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println(totalcms): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms, (i++)]): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is not present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is present"): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:14 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:15 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:16 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:16 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:16 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:16 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:16 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is not present"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - expectedText = "Product(s):": null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - actualText = getText().toString(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - isproductPresent = verifyMatch(actualText, expectedText, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:16 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (isproductPresent == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - ithproductrowColumn = get(i).getText(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - installationWord = ithproductrowColumn.contains("Installation and Licensing"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (installationWord == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - out.println("Installation and Licensing word is present"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:16 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - configurationWord = ithdocumentColumn.contains("Installation, Licensing & Configuration"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - if (configurationWord == true): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - out.println("Installation, Licensing & Configuration word is present"): null

2021-11-16 16:06:16 - [TEST_STEP][PASSED] - Thread.sleep(25000): null

2021-11-16 16:06:41 - [TEST_STEP][PASSED] - back(): Navigate back successfully

2021-11-16 16:06:43 - [MESSAGE][PASSED] - Navigate back successfully

2021-11-16 16:06:43 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Quick_Link_Section_OR/Product_Manuals_Location")): Object 'Object Repository/Quick_Link_Section_OR/Product_Manuals_Location' is visible

2021-11-16 16:06:44 - [MESSAGE][PASSED] - Object 'Object Repository/Quick_Link_Section_OR/Product_Manuals_Location' is visible

2021-11-16 16:06:44 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Quick_Link_Section_OR/Product_Manuals_Location")): Object: 'Object Repository/Quick_Link_Section_OR/Product_Manuals_Location' is clicked on

2021-11-16 16:06:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Quick_Link_Section_OR/Product_Manuals_Location' is clicked on

2021-11-16 16:06:48 - [TEST_STEP][PASSED] - expectedTitle1 = "Product Manuals": null

2021-11-16 16:06:48 - [TEST_STEP][PASSED] - actualTitle1 = getWindowTitle(): Current window's title is: 'Product Manuals'

2021-11-16 16:06:48 - [MESSAGE][PASSED] - Current window's title is: 'Product Manuals'

2021-11-16 16:06:48 - [TEST_STEP][PASSED] - verifyMatch(actualTitle1, expectedTitle1, true): Actual text 'Product Manuals' and expected text 'Product Manuals' are matched  using regular expression

2021-11-16 16:06:48 - [MESSAGE][PASSED] - Actual text 'Product Manuals' and expected text 'Product Manuals' are matched  using regular expression

2021-11-16 16:06:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/Pagehead_location"), "Product Manuals"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Pagehead_location' are matched.

2021-11-16 16:06:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Pagehead_location' are matched.

2021-11-16 16:06:49 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Product_Manuals_release_links")): Object 'Object Repository/Search_Result_Page_OR/Product_Manuals_release_links' is visible

2021-11-16 16:06:49 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Product_Manuals_release_links' is visible

2021-11-16 16:06:49 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Product_Manuals_release_links")): Object: 'Object Repository/Search_Result_Page_OR/Product_Manuals_release_links' is clicked on

2021-11-16 16:06:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Product_Manuals_release_links' is clicked on

2021-11-16 16:06:52 - [TEST_STEP][PASSED] - attributeURL = getAttribute(findTestObject("Object Repository/Release_link_pdf_location"), "href").toString(): Attribute 'href' of object 'Object Repository/Release_link_pdf_location' is: 'https://hfx-prd-cos.cs197.force.com/apex/RedirectPage?urlType=techPubs&url=/tech-pubs/Docs/amsdmv/amsdmvIC6.1.8/amsdmv.pdf'

2021-11-16 16:06:54 - [MESSAGE][PASSED] - Attribute 'href' of object 'Object Repository/Release_link_pdf_location' is: 'https://hfx-prd-cos.cs197.force.com/apex/RedirectPage?urlType=techPubs&url=/tech-pubs/Docs/amsdmv/amsdmvIC6.1.8/amsdmv.pdf'

2021-11-16 16:06:54 - [TEST_STEP][PASSED] - out.println(attributeURL): null

2021-11-16 16:06:54 - [TEST_STEP][PASSED] - islinkPDF = attributeURL.endsWith(".pdf"): null

2021-11-16 16:06:54 - [TEST_STEP][PASSED] - if (islinkPDF == true): null

2021-11-16 16:06:54 - [TEST_STEP][PASSED] - out.println("Link contains PDF file"): null

2021-11-16 16:06:54 - [TEST_STEP][PASSED] - Thread.sleep(3000): null

2021-11-16 16:06:57 - [TEST_STEP][PASSED] - back(): Navigate back successfully

2021-11-16 16:07:00 - [MESSAGE][PASSED] - Navigate back successfully

2021-11-16 16:07:00 - [TEST_STEP][PASSED] - Thread.sleep(2000): null

2021-11-16 16:07:02 - [TEST_STEP][PASSED] - back(): Navigate back successfully

2021-11-16 16:07:04 - [MESSAGE][PASSED] - Navigate back successfully

2021-11-16 16:07:04 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Quick_Link_Section_OR/Training_Courses_location")): Object 'Object Repository/Quick_Link_Section_OR/Training_Courses_location' is visible

2021-11-16 16:07:06 - [MESSAGE][PASSED] - Object 'Object Repository/Quick_Link_Section_OR/Training_Courses_location' is visible

2021-11-16 16:07:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Quick_Link_Section_OR/Training_Courses_location")): Object: 'Object Repository/Quick_Link_Section_OR/Training_Courses_location' is clicked on

2021-11-16 16:07:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Quick_Link_Section_OR/Training_Courses_location' is clicked on

2021-11-16 16:07:12 - [TEST_STEP][PASSED] - expectedTitle2 = "Training Courses": null

2021-11-16 16:07:12 - [TEST_STEP][PASSED] - actualTitle2 = getWindowTitle(): Current window's title is: 'Training Courses'

2021-11-16 16:07:12 - [MESSAGE][PASSED] - Current window's title is: 'Training Courses'

2021-11-16 16:07:12 - [TEST_STEP][PASSED] - verifyMatch(actualTitle2, expectedTitle2, true): Actual text 'Training Courses' and expected text 'Training Courses' are matched  using regular expression

2021-11-16 16:07:12 - [MESSAGE][PASSED] - Actual text 'Training Courses' and expected text 'Training Courses' are matched  using regular expression

2021-11-16 16:07:12 - [TEST_STEP][PASSED] - Thread.sleep(5000): null

2021-11-16 16:07:17 - [TEST_STEP][PASSED] - back(): Navigate back successfully

2021-11-16 16:07:18 - [MESSAGE][PASSED] - Navigate back successfully

2021-11-16 16:07:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-QuickLinks"), ["OptionToFind":Option1ToFind, "titleToVerify":title1ToVerify, "WordToVerify":Word1ToVerify], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-QuickLinks' successfully

2021-11-16 16:07:18 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-QuickLinks: Test Cases/CommonTestCases/TC-QuickLinks

2021-11-16 16:07:19 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:07:19 - [TEST_STEP][PASSED] - optionToBeFound = driver.findElement(By.xpath(OptionToFind)): null

2021-11-16 16:07:20 - [TEST_STEP][PASSED] - isOptionVisible = optionToBeFound.isDisplayed(): null

2021-11-16 16:07:20 - [TEST_STEP][PASSED] - out.println(isOptionVisible): null

2021-11-16 16:07:20 - [TEST_STEP][PASSED] - optionToBeFound.click(): null

2021-11-16 16:07:22 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:07:24 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:07:24 - [TEST_STEP][PASSED] - actualTitle = getWindowTitle(): Current window's title is: 'What's new'

2021-11-16 16:07:24 - [MESSAGE][PASSED] - Current window's title is: 'What's new'

2021-11-16 16:07:24 - [TEST_STEP][PASSED] - verifyMatch(actualTitle, titleToVerify, true): Actual text 'What's new' and expected text 'What's new' are matched  using regular expression

2021-11-16 16:07:24 - [MESSAGE][PASSED] - Actual text 'What's new' and expected text 'What's new' are matched  using regular expression

2021-11-16 16:07:24 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/SearchCustomHeader_location"), titleToVerify): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:07:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:07:24 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:07:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:07:25 - [TEST_STEP][PASSED] - thirdRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")): null

2021-11-16 16:07:25 - [TEST_STEP][PASSED] - documentColumn = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[2]")): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - totalcms = thirdRow.size(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(totalcms): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms, (i++)]): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:26 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:27 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:27 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:27 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:27 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:07:42 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:07:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:07:42 - [TEST_STEP][PASSED] - back(): Navigate back successfully

2021-11-16 16:07:44 - [MESSAGE][PASSED] - Navigate back successfully

2021-11-16 16:07:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-QuickLinks' successfully

2021-11-16 16:07:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-QuickLinks"), ["OptionToFind":Option2ToFind, "titleToVerify":title2ToVerify, "WordToVerify":Word2ToVerify], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-QuickLinks' successfully

2021-11-16 16:07:44 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-QuickLinks: Test Cases/CommonTestCases/TC-QuickLinks

2021-11-16 16:07:44 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:07:44 - [TEST_STEP][PASSED] - optionToBeFound = driver.findElement(By.xpath(OptionToFind)): null

2021-11-16 16:07:47 - [TEST_STEP][PASSED] - isOptionVisible = optionToBeFound.isDisplayed(): null

2021-11-16 16:07:47 - [TEST_STEP][PASSED] - out.println(isOptionVisible): null

2021-11-16 16:07:47 - [TEST_STEP][PASSED] - optionToBeFound.click(): null

2021-11-16 16:07:49 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:07:51 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:07:51 - [TEST_STEP][PASSED] - actualTitle = getWindowTitle(): Current window's title is: 'Troubleshooting Information'

2021-11-16 16:07:51 - [MESSAGE][PASSED] - Current window's title is: 'Troubleshooting Information'

2021-11-16 16:07:51 - [TEST_STEP][PASSED] - verifyMatch(actualTitle, titleToVerify, true): Actual text 'Troubleshooting Information' and expected text 'Troubleshooting Information' are matched  using regular expression

2021-11-16 16:07:51 - [MESSAGE][PASSED] - Actual text 'Troubleshooting Information' and expected text 'Troubleshooting Information' are matched  using regular expression

2021-11-16 16:07:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/SearchCustomHeader_location"), titleToVerify): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:07:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:07:51 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:07:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:07:51 - [TEST_STEP][PASSED] - thirdRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - documentColumn = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[2]")): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - totalcms = thirdRow.size(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(totalcms): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms, (i++)]): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:52 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:07:53 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:08:08 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:08:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:08:09 - [TEST_STEP][PASSED] - back(): Navigate back successfully

2021-11-16 16:08:10 - [MESSAGE][PASSED] - Navigate back successfully

2021-11-16 16:08:10 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-QuickLinks' successfully

2021-11-16 16:08:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-QuickLinks"), ["OptionToFind":Option3ToFind, "titleToVerify":title3ToVerify, "WordToVerify":Word3ToVerify], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-QuickLinks' successfully

2021-11-16 16:08:10 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-QuickLinks: Test Cases/CommonTestCases/TC-QuickLinks

2021-11-16 16:08:10 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:08:10 - [TEST_STEP][PASSED] - optionToBeFound = driver.findElement(By.xpath(OptionToFind)): null

2021-11-16 16:08:13 - [TEST_STEP][PASSED] - isOptionVisible = optionToBeFound.isDisplayed(): null

2021-11-16 16:08:13 - [TEST_STEP][PASSED] - out.println(isOptionVisible): null

2021-11-16 16:08:13 - [TEST_STEP][PASSED] - optionToBeFound.click(): null

2021-11-16 16:08:16 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:08:17 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:08:17 - [TEST_STEP][PASSED] - actualTitle = getWindowTitle(): Current window's title is: 'Video Library'

2021-11-16 16:08:17 - [MESSAGE][PASSED] - Current window's title is: 'Video Library'

2021-11-16 16:08:17 - [TEST_STEP][PASSED] - verifyMatch(actualTitle, titleToVerify, true): Actual text 'Video Library' and expected text 'Video Library' are matched  using regular expression

2021-11-16 16:08:17 - [MESSAGE][PASSED] - Actual text 'Video Library' and expected text 'Video Library' are matched  using regular expression

2021-11-16 16:08:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/SearchCustomHeader_location"), titleToVerify): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:08:17 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:08:17 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:08:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:08:18 - [TEST_STEP][PASSED] - thirdRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")): null

2021-11-16 16:08:18 - [TEST_STEP][PASSED] - documentColumn = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[2]")): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - totalcms = thirdRow.size(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(totalcms): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms, (i++)]): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:08:19 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:08:34 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:08:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:08:35 - [TEST_STEP][PASSED] - back(): Navigate back successfully

2021-11-16 16:08:38 - [MESSAGE][PASSED] - Navigate back successfully

2021-11-16 16:08:38 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-QuickLinks' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TC-03-VerifySearchFunctionality" time="89.986" classname="Test Cases/TC-03-VerifySearchFunctionality" status="PASSED">
         <system-out><![CDATA[2021-11-16 16:08:38 - [TEST_CASE][PASSED] - Test Cases/TC-03-VerifySearchFunctionality: Test Cases/TC-03-VerifySearchFunctionality

2021-11-16 16:08:38 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TC-01-VerifyLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/TC-01-VerifyLogin' successfully

2021-11-16 16:08:38 - [TEST_CASE][PASSED] - Test Cases/TC-01-VerifyLogin: Test Cases/TC-01-VerifyLogin

2021-11-16 16:08:38 - [TEST_STEP][PASSED] - openBrowser(findTestData("Login_Credentials").getValue("Input URL", 1)): Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:08:38 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2021-11-16 16:08:39 - [MESSAGE][INFO] - Starting 'Chrome' driver

2021-11-16 16:08:39 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2021-11-16 16:08:45 - [MESSAGE][PASSED] - Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:08:45 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/UserName_Field"), findTestData("Login_Credentials").getValue("User Name", 1)): Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:08:47 - [MESSAGE][PASSED] - Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:08:47 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/Password_Field"), findTestData("Login_Credentials").getValue("Password", 1)): Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:08:48 - [MESSAGE][PASSED] - Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:08:48 - [TEST_STEP][PASSED] - click(findTestObject("Login_OR/Login_Button_Field")): Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:09:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:09:03 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Login_OR/UserLogo"), 0): Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:09:03 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2021-11-16 16:09:05 - [MESSAGE][PASSED] - Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:09:05 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TC-01-VerifyLogin' successfully

2021-11-16 16:09:05 - [TEST_STEP][PASSED] - setText(findTestObject("Searchbar_OR/Searchbar_position"), "product manuals"): Text 'product manuals' is set on object 'Object Repository/Searchbar_OR/Searchbar_position'

2021-11-16 16:09:06 - [MESSAGE][PASSED] - Text 'product manuals' is set on object 'Object Repository/Searchbar_OR/Searchbar_position'

2021-11-16 16:09:06 - [TEST_STEP][PASSED] - click(findTestObject("Searchbar_OR/MagnifyingGlass_Position")): Object: 'Object Repository/Searchbar_OR/MagnifyingGlass_Position' is clicked on

2021-11-16 16:09:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Searchbar_OR/MagnifyingGlass_Position' is clicked on

2021-11-16 16:09:07 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Web element with id: 'Object Repository/Search_Result_Page_OR/Search_Area' located by '//div[@class = 'coveo-result-list-container coveo-list-layout-container']//a' not found

2021-11-16 16:09:13 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //div[@class = 'coveo-result-list-container coveo-list-layout-container']//a'. Please recheck the objects properties to make sure the desired element is located. 

2021-11-16 16:09:13 - [MESSAGE][WARNING] - [SELF-HEALING] Failed to find element with id 'Object Repository/Search_Result_Page_OR/Search_Area'. Try using Self-healing.

2021-11-16 16:09:15 - [MESSAGE][INFO] - [SELF-HEALING] No working XPath is found.

2021-11-16 16:09:16 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: '. Please recheck the objects properties to make sure the desired element is located. 

2021-11-16 16:09:16 - [MESSAGE][WARNING] - [SELF-HEALING] Cannot find elements when the selector is null

2021-11-16 16:09:16 - [MESSAGE][WARNING] - Web element with id: 'Object Repository/Search_Result_Page_OR/Search_Area' located by '//div[@class = 'coveo-result-list-container coveo-list-layout-container']//a' not found

2021-11-16 16:09:16 - [TEST_STEP][PASSED] - expectedTitle = "Search Results": null

2021-11-16 16:09:16 - [TEST_STEP][PASSED] - actualTitle = getWindowTitle(): Current window's title is: 'Search Results'

2021-11-16 16:09:16 - [MESSAGE][PASSED] - Current window's title is: 'Search Results'

2021-11-16 16:09:16 - [TEST_STEP][PASSED] - verifyMatch(actualTitle, expectedTitle, true): Actual text 'Search Results' and expected text 'Search Results' are matched  using regular expression

2021-11-16 16:09:16 - [MESSAGE][PASSED] - Actual text 'Search Results' and expected text 'Search Results' are matched  using regular expression

2021-11-16 16:09:16 - [TEST_STEP][PASSED] - back(): Navigate back successfully

2021-11-16 16:09:17 - [MESSAGE][PASSED] - Navigate back successfully

2021-11-16 16:09:17 - [TEST_STEP][PASSED] - setText(findTestObject("Searchbar_OR/Searchbar_position"), "product manuals"): Text 'product manuals' is set on object 'Object Repository/Searchbar_OR/Searchbar_position'

2021-11-16 16:09:19 - [MESSAGE][PASSED] - Text 'product manuals' is set on object 'Object Repository/Searchbar_OR/Searchbar_position'

2021-11-16 16:09:19 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Searchbar_OR/Searchbar_position"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Searchbar_OR/Searchbar_position'

2021-11-16 16:09:20 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Searchbar_OR/Searchbar_position'

2021-11-16 16:09:20 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:09:26 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - expectedTitle1 = "Search Results": null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - actualTitle1 = getWindowTitle(): Current window's title is: 'Search Results'

2021-11-16 16:09:26 - [MESSAGE][PASSED] - Current window's title is: 'Search Results'

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - verifyMatch(actualTitle1, expectedTitle1, true): Actual text 'Search Results' and expected text 'Search Results' are matched  using regular expression

2021-11-16 16:09:26 - [MESSAGE][PASSED] - Actual text 'Search Results' and expected text 'Search Results' are matched  using regular expression

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/Searched_Text_in_Summary_section"), "product manuals"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Searched_Text_in_Summary_section' are matched.

2021-11-16 16:09:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Searched_Text_in_Summary_section' are matched.

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - highlightedTexts = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-excerpt']//span[@class = 'coveo-highlight']")): null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - for ([i = 0, i < highlightedTexts.size(), (i++)]): null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - expectedsearchedText1 = "product": null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - expectedsearchedText2 = "manual": null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - isitem1Present = getText().contains(expectedsearchedText1): null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - isitem2Present = getText().contains(expectedsearchedText2): null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - out.println(isitem1Present): null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - out.println(isitem2Present): null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - if (isitem1Present == true): null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - break: null

2021-11-16 16:09:26 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Results_Per_Page_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Results_Per_Page_location' is visible

2021-11-16 16:09:27 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Results_Per_Page_location' is visible

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - resultNumber = ["10", "25", "50", "100"]: null

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - actualNumber = driver.findElements(By.xpath("//ul[@class ='coveo-results-per-page-list']/li")): null

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - for ([i = 0, i <= 3, (i++)]): null

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - isnumberSame = verifyMatch(get(i).getText(), resultNumber[i], false): Actual text '10' and expected text '10' are matched 

2021-11-16 16:09:27 - [MESSAGE][PASSED] - Actual text '10' and expected text '10' are matched 

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - out.println(isnumberSame): null

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - isnumberSame = verifyMatch(get(i).getText(), resultNumber[i], false): Actual text '25' and expected text '25' are matched 

2021-11-16 16:09:27 - [MESSAGE][PASSED] - Actual text '25' and expected text '25' are matched 

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - out.println(isnumberSame): null

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - isnumberSame = verifyMatch(get(i).getText(), resultNumber[i], false): Actual text '50' and expected text '50' are matched 

2021-11-16 16:09:27 - [MESSAGE][PASSED] - Actual text '50' and expected text '50' are matched 

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - out.println(isnumberSame): null

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - isnumberSame = verifyMatch(get(i).getText(), resultNumber[i], false): Actual text '100' and expected text '100' are matched 

2021-11-16 16:09:27 - [MESSAGE][PASSED] - Actual text '100' and expected text '100' are matched 

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - out.println(isnumberSame): null

2021-11-16 16:09:27 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Result_Number/Default_number_location"), "aria-checked", "true", 10): Object 'Object Repository/Search_Result_Page_OR/Result_Number/Default_number_location' has attribute 'aria-checked' with value 'true'

2021-11-16 16:09:28 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Result_Number/Default_number_location' has attribute 'aria-checked' with value 'true'

2021-11-16 16:09:28 - [TEST_STEP][PASSED] - get(0).click(): null

2021-11-16 16:09:28 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:09:32 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:09:32 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/Result_summary_section"), "10"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Result_summary_section' are matched.

2021-11-16 16:09:32 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Result_summary_section' are matched.

2021-11-16 16:09:32 - [TEST_STEP][PASSED] - expectedresultNumber = 10: null

2021-11-16 16:09:32 - [TEST_STEP][PASSED] - numberofLink = findWebElements(findTestObject("Object Repository/Search_Result_Page_OR/LinkLocation_on_Search_Result_Page"), 30): null

2021-11-16 16:09:32 - [TEST_STEP][PASSED] - actualresultNumber = numberofLink.size(): null

2021-11-16 16:09:32 - [TEST_STEP][PASSED] - verifyEqual(actualresultNumber, expectedresultNumber): Actual object '10' and expected object '10' are equal

2021-11-16 16:09:32 - [MESSAGE][PASSED] - Actual object '10' and expected object '10' are equal

2021-11-16 16:09:32 - [TEST_STEP][PASSED] - totalResult = getText(findTestObject("Object Repository/Search_Result_Page_OR/Total_number_of_results")): Text of object 'Object Repository/Search_Result_Page_OR/Total_number_of_results' is: '3,128'

2021-11-16 16:09:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Total_number_of_results' is: '3,128'

2021-11-16 16:09:33 - [TEST_STEP][PASSED] - resultperPage = getText(findTestObject("Object Repository/Search_Result_Page_OR/Result_summary_section")): Text of object 'Object Repository/Search_Result_Page_OR/Result_summary_section' is: '10'

2021-11-16 16:09:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Result_summary_section' is: '10'

2021-11-16 16:09:33 - [TEST_STEP][PASSED] - if (totalResult > resultperPage): Object 'Object Repository/Search_Result_Page_OR/Pagination_location' is visible

2021-11-16 16:09:33 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Pagination_location")): Object 'Object Repository/Search_Result_Page_OR/Pagination_location' is visible

2021-11-16 16:09:34 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Pagination_location' is visible

2021-11-16 16:09:34 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Default_Selected_Page"), "aria-pressed", "true", 10): Object 'Object Repository/Search_Result_Page_OR/Default_Selected_Page' has attribute 'aria-pressed' with value 'true'

2021-11-16 16:09:34 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Default_Selected_Page' has attribute 'aria-pressed' with value 'true'

2021-11-16 16:09:34 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/Page_2_location")): Object: 'Object Repository/Search_Result_Page_OR/Page_2_location' is clicked on

2021-11-16 16:09:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Page_2_location' is clicked on

2021-11-16 16:09:35 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:09:39 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:09:39 - [TEST_STEP][PASSED] - defaultpageNumber = findWebElement(findTestObject("Object Repository/Search_Result_Page_OR/Selected_result_number")).getText(): null

2021-11-16 16:09:39 - [TEST_STEP][PASSED] - defaultNumber = defaultpageNumber.toInteger(): null

2021-11-16 16:09:39 - [TEST_STEP][PASSED] - expected_search_result_Number = defaultNumber + 1.toString(): null

2021-11-16 16:09:39 - [TEST_STEP][PASSED] - actual_search_result_Number = getText(findTestObject("Object Repository/Search_Result_Page_OR/Starting_search_result_number")): Text of object 'Object Repository/Search_Result_Page_OR/Starting_search_result_number' is: '11'

2021-11-16 16:09:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Starting_search_result_number' is: '11'

2021-11-16 16:09:40 - [TEST_STEP][PASSED] - verifyMatch(actual_search_result_Number, expected_search_result_Number, false): Actual text '11' and expected text '11' are matched 

2021-11-16 16:09:40 - [MESSAGE][PASSED] - Actual text '11' and expected text '11' are matched 

2021-11-16 16:09:40 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Page_1_location")): Object: 'Object Repository/Search_Result_Page_OR/Page_1_location' is clicked on

2021-11-16 16:09:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Page_1_location' is clicked on

2021-11-16 16:09:40 - [TEST_STEP][PASSED] - verifyElementNotPresent(findTestObject("Search_Result_Page_OR/Previous_button_location"), 5): Web element with id: 'Object Repository/Search_Result_Page_OR/Previous_button_location' located by 'By.xpath: //li[@aria-label='Previous']' is not present after '5' second(s)

2021-11-16 16:09:41 - [MESSAGE][PASSED] - Web element with id: 'Object Repository/Search_Result_Page_OR/Previous_button_location' located by 'By.xpath: //li[@aria-label='Previous']' is not present after '5' second(s)

2021-11-16 16:09:41 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/Page_2_location")): Object: 'Object Repository/Search_Result_Page_OR/Page_2_location' is clicked on

2021-11-16 16:09:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Page_2_location' is clicked on

2021-11-16 16:09:42 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Previous_button_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Previous_button_location' is visible

2021-11-16 16:09:43 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Previous_button_location' is visible

2021-11-16 16:09:43 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Next_button_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Next_button_location' is visible

2021-11-16 16:09:43 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Next_button_location' is visible

2021-11-16 16:09:43 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Page_2_location"), "aria-pressed", "true", 10): Object 'Object Repository/Search_Result_Page_OR/Page_2_location' has attribute 'aria-pressed' with value 'true'

2021-11-16 16:09:44 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Page_2_location' has attribute 'aria-pressed' with value 'true'

2021-11-16 16:09:44 - [TEST_STEP][PASSED] - currentpageNumber = getText(findTestObject("Object Repository/Search_Result_Page_OR/Page_2_location")): Text of object 'Object Repository/Search_Result_Page_OR/Page_2_location' is: '2'

2021-11-16 16:09:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Page_2_location' is: '2'

2021-11-16 16:09:44 - [TEST_STEP][PASSED] - convert_current_page_number = currentpageNumber.toInteger() - 1: null

2021-11-16 16:09:44 - [TEST_STEP][PASSED] - expected_current_page_number = convert_current_page_number.toString(): null

2021-11-16 16:09:44 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/Previous_button_location")): Object: 'Object Repository/Search_Result_Page_OR/Previous_button_location' is clicked on

2021-11-16 16:09:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Previous_button_location' is clicked on

2021-11-16 16:09:45 - [TEST_STEP][PASSED] - actual_current_page_number = findWebElement(findTestObject("Object Repository/Search_Result_Page_OR/Active_page_number")).getText(): null

2021-11-16 16:09:46 - [TEST_STEP][PASSED] - verifyMatch(actual_current_page_number, expected_current_page_number, false): Actual text '1' and expected text '1' are matched 

2021-11-16 16:09:46 - [MESSAGE][PASSED] - Actual text '1' and expected text '1' are matched 

2021-11-16 16:09:46 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Page_1_location"), "aria-pressed", "true", 10): Object 'Object Repository/Search_Result_Page_OR/Page_1_location' has attribute 'aria-pressed' with value 'true'

2021-11-16 16:09:47 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Page_1_location' has attribute 'aria-pressed' with value 'true'

2021-11-16 16:09:47 - [TEST_STEP][PASSED] - currentpageNumber1 = getText(findTestObject("Object Repository/Search_Result_Page_OR/Page_1_location")): Text of object 'Object Repository/Search_Result_Page_OR/Page_1_location' is: '1'

2021-11-16 16:09:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Page_1_location' is: '1'

2021-11-16 16:09:47 - [TEST_STEP][PASSED] - convert_current_page_number1 = currentpageNumber1.toInteger() + 1: null

2021-11-16 16:09:47 - [TEST_STEP][PASSED] - expected_current_page_number1 = convert_current_page_number1.toString(): null

2021-11-16 16:09:47 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/Next_button_location")): Object: 'Object Repository/Search_Result_Page_OR/Next_button_location' is clicked on

2021-11-16 16:09:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Next_button_location' is clicked on

2021-11-16 16:09:47 - [TEST_STEP][PASSED] - actual_current_page_number1 = findWebElement(findTestObject("Object Repository/Search_Result_Page_OR/Active_page_number")).getText(): null

2021-11-16 16:09:48 - [TEST_STEP][PASSED] - isMatchTrue = verifyMatch(actual_current_page_number1, expected_current_page_number1, false): Actual text '2' and expected text '2' are matched 

2021-11-16 16:09:48 - [MESSAGE][PASSED] - Actual text '2' and expected text '2' are matched 

2021-11-16 16:09:48 - [TEST_STEP][PASSED] - out.println(isMatchTrue): null

2021-11-16 16:09:48 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is visible

2021-11-16 16:09:49 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is visible

2021-11-16 16:09:49 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:09:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:09:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button"), "Hide all attributes"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:09:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:09:50 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Attribute_Table_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is visible

2021-11-16 16:09:50 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is visible

2021-11-16 16:09:50 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Product_attribute_location"), "data-caption", "Product(s):", 20): Object 'Object Repository/Search_Result_Page_OR/Product_attribute_location' has attribute 'data-caption' with value 'Product(s):'

2021-11-16 16:09:51 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Product_attribute_location' has attribute 'data-caption' with value 'Product(s):'

2021-11-16 16:09:51 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:09:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:09:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button"), "Show all attributes"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:09:52 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:09:52 - [TEST_STEP][PASSED] - verifyElementNotVisible(findTestObject("Search_Result_Page_OR/Attribute_Table_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is NOT visible

2021-11-16 16:09:52 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is NOT visible

2021-11-16 16:09:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-i-button"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-i-button' successfully

2021-11-16 16:09:52 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-i-button: Test Cases/CommonTestCases/TC-i-button

2021-11-16 16:09:53 - [TEST_STEP][PASSED] - currentResultPerPage = getText().toInteger(): null

2021-11-16 16:09:53 - [TEST_STEP][PASSED] - out.println(currentResultPerPage): null

2021-11-16 16:09:53 - [TEST_STEP][PASSED] - click(findTestObject("i_button_OR/1st_i_button_location")): Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:09:54 - [MESSAGE][PASSED] - Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:09:54 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("i_button_OR/1st_attribute_table_location")): Object 'Object Repository/i_button_OR/1st_attribute_table_location' is visible

2021-11-16 16:09:54 - [MESSAGE][PASSED] - Object 'Object Repository/i_button_OR/1st_attribute_table_location' is visible

2021-11-16 16:09:54 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:09:54 - [TEST_STEP][PASSED] - expectedValue = false: null

2021-11-16 16:09:54 - [TEST_STEP][PASSED] - for ([i = 1, i <= currentResultPerPage - 1, (i++)]): null

2021-11-16 16:09:54 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:55 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:56 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:09:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-i-button' successfully

2021-11-16 16:09:57 - [TEST_STEP][PASSED] - title = getAttribute(findTestObject("Object Repository/Search_Result_Page_OR/1st_URL_location"), "title"): Attribute 'title' of object 'Object Repository/Search_Result_Page_OR/1st_URL_location' is: 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation'

2021-11-16 16:09:58 - [MESSAGE][PASSED] - Attribute 'title' of object 'Object Repository/Search_Result_Page_OR/1st_URL_location' is: 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation'

2021-11-16 16:09:58 - [TEST_STEP][PASSED] - url = getAttribute(findTestObject("Object Repository/Search_Result_Page_OR/1st_URL_location"), "href"): Attribute 'href' of object 'Object Repository/Search_Result_Page_OR/1st_URL_location' is: 'https://hfx-prd-cos.cs197.force.com/apex/techpubDocViewerPage?xmlName=voltustcrcom.xml&title=Voltus%20Stylus%20Common%20UI%20Text%20Reference%20Manual%20%20--%20About%20This%20Manual%20-%20Voltus%20Product%20Documentation&hash=AboutThisManual-VoltusProductDocumentation&c_version=21.11&path=voltusTCRcom/voltusTCRcom21.11/About_This_Manual.html#AboutThisManual-VoltusProductDocumentation'

2021-11-16 16:09:58 - [MESSAGE][PASSED] - Attribute 'href' of object 'Object Repository/Search_Result_Page_OR/1st_URL_location' is: 'https://hfx-prd-cos.cs197.force.com/apex/techpubDocViewerPage?xmlName=voltustcrcom.xml&title=Voltus%20Stylus%20Common%20UI%20Text%20Reference%20Manual%20%20--%20About%20This%20Manual%20-%20Voltus%20Product%20Documentation&hash=AboutThisManual-VoltusProductDocumentation&c_version=21.11&path=voltusTCRcom/voltusTCRcom21.11/About_This_Manual.html#AboutThisManual-VoltusProductDocumentation'

2021-11-16 16:09:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location"), "Copy Title/URL"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location' are matched.

2021-11-16 16:09:58 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location' are matched.

2021-11-16 16:09:58 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location")): Object: 'Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location' is clicked on

2021-11-16 16:09:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location' is clicked on

2021-11-16 16:09:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location"), "Copied!"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location' are matched.

2021-11-16 16:09:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/1st_Copy_URL_link_location' are matched.

2021-11-16 16:09:59 - [TEST_STEP][PASSED] - data = getSystemClipboard().getData(stringFlavor): null

2021-11-16 16:10:00 - [TEST_STEP][PASSED] - out.println(data): null

2021-11-16 16:10:00 - [TEST_STEP][PASSED] - istitlePresent = data.contains(title): null

2021-11-16 16:10:00 - [TEST_STEP][PASSED] - out.println(istitlePresent): null

2021-11-16 16:10:00 - [TEST_STEP][PASSED] - isurlPresent = data.contains(url): null

2021-11-16 16:10:00 - [TEST_STEP][PASSED] - out.println(istitlePresent): null

2021-11-16 16:10:00 - [TEST_STEP][PASSED] - linkTitle = getText(findTestObject("Object Repository/Search_Result_Page_OR/Search_Area")): Text of object 'Object Repository/Search_Result_Page_OR/Search_Area' is: 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation'

2021-11-16 16:10:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Search_Area' is: 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation'

2021-11-16 16:10:00 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/Search_Area")): Object: 'Object Repository/Search_Result_Page_OR/Search_Area' is clicked on

2021-11-16 16:10:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Search_Area' is clicked on

2021-11-16 16:10:01 - [TEST_STEP][PASSED] - switchToWindowIndex(1): Switched to window with index: '1'

2021-11-16 16:10:01 - [MESSAGE][PASSED] - Switched to window with index: '1'

2021-11-16 16:10:01 - [TEST_STEP][PASSED] - windowTitle = getWindowTitle(): Current window's title is: 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation'

2021-11-16 16:10:07 - [MESSAGE][PASSED] - Current window's title is: 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation'

2021-11-16 16:10:07 - [TEST_STEP][PASSED] - verifyMatch(windowTitle, linkTitle, true): Actual text 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation' and expected text 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation' are matched  using regular expression

2021-11-16 16:10:07 - [MESSAGE][PASSED] - Actual text 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation' and expected text 'Voltus Stylus Common UI Text Reference Manual -- About This Manual - Voltus Product Documentation' are matched  using regular expression

2021-11-16 16:10:07 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2021-11-16 16:10:08 - [MESSAGE][PASSED] - Browser is closed]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TC-04-VerifyApplicationNotes" time="192.776" classname="Test Cases/TC-04-VerifyApplicationNotes" status="PASSED">
         <system-out><![CDATA[2021-11-16 16:10:08 - [TEST_CASE][PASSED] - Test Cases/TC-04-VerifyApplicationNotes: Test Cases/TC-04-VerifyApplicationNotes

2021-11-16 16:10:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-OptionsOfResources"), ["OptionToCheck":ApplicationNoteXpath, "WordToVerify":Word1ToVerify, "expectedWord5":expectedWord], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-OptionsOfResources' successfully

2021-11-16 16:10:09 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-OptionsOfResources: Test Cases/CommonTestCases/TC-OptionsOfResources

2021-11-16 16:10:10 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TC-01-VerifyLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/TC-01-VerifyLogin' successfully

2021-11-16 16:10:10 - [TEST_CASE][PASSED] - Test Cases/TC-01-VerifyLogin: Test Cases/TC-01-VerifyLogin

2021-11-16 16:10:10 - [TEST_STEP][PASSED] - openBrowser(findTestData("Login_Credentials").getValue("Input URL", 1)): Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:10:10 - [MESSAGE][INFO] - Starting 'Chrome' driver

2021-11-16 16:10:10 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2021-11-16 16:10:16 - [MESSAGE][PASSED] - Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:10:16 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/UserName_Field"), findTestData("Login_Credentials").getValue("User Name", 1)): Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:10:18 - [MESSAGE][PASSED] - Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:10:18 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/Password_Field"), findTestData("Login_Credentials").getValue("Password", 1)): Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:10:19 - [MESSAGE][PASSED] - Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:10:19 - [TEST_STEP][PASSED] - click(findTestObject("Login_OR/Login_Button_Field")): Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:10:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:10:47 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Login_OR/UserLogo"), 0): Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:10:47 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2021-11-16 16:10:49 - [MESSAGE][PASSED] - Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:10:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TC-01-VerifyLogin' successfully

2021-11-16 16:10:49 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2021-11-16 16:10:49 - [MESSAGE][PASSED] - Current window maximized

2021-11-16 16:10:49 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Resources_Dropdown_OR/Resources_option_location")): Object 'Object Repository/Resources_Dropdown_OR/Resources_option_location' is visible

2021-11-16 16:10:50 - [MESSAGE][PASSED] - Object 'Object Repository/Resources_Dropdown_OR/Resources_option_location' is visible

2021-11-16 16:10:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Resources_Dropdown_OR/Resources_option_location"), "Resources"): Actual text and expected text of test object 'Object Repository/Resources_Dropdown_OR/Resources_option_location' are matched.

2021-11-16 16:10:50 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Resources_Dropdown_OR/Resources_option_location' are matched.

2021-11-16 16:10:50 - [TEST_STEP][PASSED] - mouseOver(findTestObject("Resources_Dropdown_OR/Resources_option_location")): Object: 'Object Repository/Resources_Dropdown_OR/Resources_option_location' is hovered

2021-11-16 16:10:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Resources_Dropdown_OR/Resources_option_location' is hovered

2021-11-16 16:10:51 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:10:51 - [TEST_STEP][PASSED] - optionToBeChecked = driver.findElement(By.xpath(OptionToCheck)): null

2021-11-16 16:10:51 - [TEST_STEP][PASSED] - isOptionVisible = optionToBeChecked.isDisplayed(): null

2021-11-16 16:10:51 - [TEST_STEP][PASSED] - out.println(isOptionVisible): null

2021-11-16 16:10:51 - [TEST_STEP][PASSED] - isthewordPresent = getText().contains(WordToVerify): null

2021-11-16 16:10:51 - [TEST_STEP][PASSED] - out.println(isthewordPresent): null

2021-11-16 16:10:51 - [TEST_STEP][PASSED] - optionToBeChecked.click(): null

2021-11-16 16:10:55 - [TEST_STEP][PASSED] - actualTitle = getWindowTitle(): Current window's title is: 'Application Notes'

2021-11-16 16:10:55 - [MESSAGE][PASSED] - Current window's title is: 'Application Notes'

2021-11-16 16:10:55 - [TEST_STEP][PASSED] - verifyMatch(actualTitle, WordToVerify, true): Actual text 'Application Notes' and expected text 'Application Notes' are matched  using regular expression

2021-11-16 16:10:55 - [MESSAGE][PASSED] - Actual text 'Application Notes' and expected text 'Application Notes' are matched  using regular expression

2021-11-16 16:10:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/SearchCustomHeader_location"), WordToVerify): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:10:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:10:56 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:10:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:10:57 - [TEST_STEP][PASSED] - thirdRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")): null

2021-11-16 16:10:57 - [TEST_STEP][PASSED] - documentColumn = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[2]")): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - totalcms = thirdRow.size(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(totalcms): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms, (i++)]): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:58 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is present"): null

2021-11-16 16:10:59 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:11:14 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:11:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:11:15 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Modified_Date_location")): Object 'Object Repository/Search_Result_Page_OR/Modified_Date_location' is visible

2021-11-16 16:11:15 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Modified_Date_location' is visible

2021-11-16 16:11:15 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Modified_Date_location"), "data-field", "@sflastmodifieddate", 10): Object 'Object Repository/Search_Result_Page_OR/Modified_Date_location' has attribute 'data-field' with value '@sflastmodifieddate'

2021-11-16 16:11:16 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Modified_Date_location' has attribute 'data-field' with value '@sflastmodifieddate'

2021-11-16 16:11:16 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Relevance_button_location")): Object 'Object Repository/Search_Result_Page_OR/Relevance_button_location' is visible

2021-11-16 16:11:16 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Relevance_button_location' is visible

2021-11-16 16:11:16 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Date_button_location")): Object 'Object Repository/Search_Result_Page_OR/Date_button_location' is visible

2021-11-16 16:11:17 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Date_button_location' is visible

2021-11-16 16:11:17 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Date_button_location"), "aria-checked", "true", 10): Object 'Object Repository/Search_Result_Page_OR/Date_button_location' has attribute 'aria-checked' with value 'true'

2021-11-16 16:11:17 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Date_button_location' has attribute 'aria-checked' with value 'true'

2021-11-16 16:11:17 - [TEST_STEP][PASSED] - dates = driver.findElements(By.xpath("//*[@id='coveo-result-list1']/div[2]/div/div/div/div/div[1]/div[2]/span/span")): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - for ([i = 0, i < dates.size() - 1, (i++)]): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:18 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:11:19 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:11:34 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Date_button_location")): Object: 'Object Repository/Search_Result_Page_OR/Date_button_location' is clicked on

2021-11-16 16:11:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Date_button_location' is clicked on

2021-11-16 16:11:34 - [TEST_STEP][PASSED] - dates1 = driver.findElements(By.xpath("//*[@id='coveo-result-list1']/div[2]/div/div/div/div/div[1]/div[2]/span/span")): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - for ([i = 0, i < dates1.size() - 1, (i++)]): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:36 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:11:37 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:11:52 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Date_button_location")): Object: 'Object Repository/Search_Result_Page_OR/Date_button_location' is clicked on

2021-11-16 16:11:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Date_button_location' is clicked on

2021-11-16 16:11:53 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Searchbox_in_search_result_page")): Object 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page' is visible

2021-11-16 16:11:54 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page' is visible

2021-11-16 16:11:54 - [TEST_STEP][PASSED] - setText(findTestObject("Search_Result_Page_OR/Searchbox_in_search_result_page"), "cadence"): Text 'cadence' is set on object 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page'

2021-11-16 16:11:55 - [MESSAGE][PASSED] - Text 'cadence' is set on object 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page'

2021-11-16 16:11:55 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Search_Result_Page_OR/Searchbox_in_search_result_page"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page'

2021-11-16 16:11:57 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page'

2021-11-16 16:11:57 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:11:58 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:11:58 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:11:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:11:59 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button"), "Hide all attributes"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:12:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:12:00 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Attribute_Table_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is visible

2021-11-16 16:12:00 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is visible

2021-11-16 16:12:00 - [TEST_STEP][PASSED] - firstRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes']//div[2]//tr[1]/th")): null

2021-11-16 16:12:01 - [TEST_STEP][PASSED] - secondRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[2]/td[1]")): null

2021-11-16 16:12:01 - [TEST_STEP][PASSED] - thirdRow1 = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")): null

2021-11-16 16:12:01 - [TEST_STEP][PASSED] - documentColumn1 = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[2]")): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - totalcms1 = firstRow.size(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - out.println(totalcms1): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms1, (i++)]): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - totalcms2 = secondRow.size(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - out.println(totalcms2): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms2, (i++)]): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:02 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - totalcms3 = thirdRow1.size(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(totalcms3): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms3, (i++)]): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:03 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is present"): null

2021-11-16 16:12:04 - [TEST_STEP][PASSED] - Thread.sleep(20000): null

2021-11-16 16:12:24 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:12:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:12:25 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button"), "Show all attributes"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:12:26 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:12:26 - [TEST_STEP][PASSED] - verifyElementNotVisible(findTestObject("Search_Result_Page_OR/Attribute_Table_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is NOT visible

2021-11-16 16:12:26 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is NOT visible

2021-11-16 16:12:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-i-button"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-i-button' successfully

2021-11-16 16:12:26 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-i-button: Test Cases/CommonTestCases/TC-i-button

2021-11-16 16:12:26 - [TEST_STEP][PASSED] - currentResultPerPage = getText().toInteger(): null

2021-11-16 16:12:27 - [TEST_STEP][PASSED] - out.println(currentResultPerPage): null

2021-11-16 16:12:27 - [TEST_STEP][PASSED] - click(findTestObject("i_button_OR/1st_i_button_location")): Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:12:27 - [MESSAGE][PASSED] - Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:12:27 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("i_button_OR/1st_attribute_table_location")): Object 'Object Repository/i_button_OR/1st_attribute_table_location' is visible

2021-11-16 16:12:28 - [MESSAGE][PASSED] - Object 'Object Repository/i_button_OR/1st_attribute_table_location' is visible

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - expectedValue = false: null

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - for ([i = 1, i <= currentResultPerPage - 1, (i++)]): null

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:28 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:29 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:30 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:31 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:32 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:33 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:34 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:35 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:36 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:12:37 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:12:37 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:12:37 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:12:37 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:12:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-i-button' successfully

2021-11-16 16:12:37 - [TEST_STEP][PASSED] - product = xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes']//div[2]//tr[1]/th")).isDisplayed(): null

2021-11-16 16:12:37 - [TEST_STEP][PASSED] - articleNumber = xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[2]/td[1]")).isDisplayed(): null

2021-11-16 16:12:37 - [TEST_STEP][PASSED] - documentType = xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")).isDisplayed(): null

2021-11-16 16:12:38 - [TEST_STEP][PASSED] - out.println(product): null

2021-11-16 16:12:38 - [TEST_STEP][PASSED] - out.println(articleNumber): null

2021-11-16 16:12:38 - [TEST_STEP][PASSED] - out.println(documentType): null

2021-11-16 16:12:38 - [TEST_STEP][PASSED] - Thread.sleep(6000): null

2021-11-16 16:12:44 - [TEST_STEP][PASSED] - click(findTestObject("i_button_OR/1st_i_button_location")): Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:12:44 - [MESSAGE][PASSED] - Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:12:44 - [TEST_STEP][PASSED] - linkTitle = getText(findTestObject("Object Repository/Search_Result_Page_OR/Search_Area")): Text of object 'Object Repository/Search_Result_Page_OR/Search_Area' is: 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview'

2021-11-16 16:12:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Search_Area' is: 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview'

2021-11-16 16:12:45 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/Search_Area")): Object: 'Object Repository/Search_Result_Page_OR/Search_Area' is clicked on

2021-11-16 16:12:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Search_Area' is clicked on

2021-11-16 16:12:45 - [TEST_STEP][PASSED] - switchToWindowIndex(1): Switched to window with index: '1'

2021-11-16 16:12:45 - [MESSAGE][PASSED] - Switched to window with index: '1'

2021-11-16 16:12:45 - [TEST_STEP][PASSED] - windowTitle = getWindowTitle(): Current window's title is: 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview'

2021-11-16 16:12:50 - [MESSAGE][PASSED] - Current window's title is: 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview'

2021-11-16 16:12:50 - [TEST_STEP][PASSED] - verifyMatch(windowTitle, linkTitle, true): Actual text 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview' and expected text 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview' are matched  using regular expression

2021-11-16 16:12:50 - [MESSAGE][PASSED] - Actual text 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview' and expected text 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview' are matched  using regular expression

2021-11-16 16:12:50 - [TEST_STEP][PASSED] - actualpageheadText = getText(findTestObject("Object Repository/Search_Result_Page_OR/Pagehead_location")): Text of object 'Object Repository/Search_Result_Page_OR/Pagehead_location' is: 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview'

2021-11-16 16:12:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Pagehead_location' is: 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview'

2021-11-16 16:12:51 - [TEST_STEP][PASSED] - verifyMatch(actualpageheadText, linkTitle, true): Actual text 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview' and expected text 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview' are matched  using regular expression

2021-11-16 16:12:51 - [MESSAGE][PASSED] - Actual text 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview' and expected text 'JUG Webinar 2020 - JasperGold Apps and Methodologies Overview' are matched  using regular expression

2021-11-16 16:12:51 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/i_button_OR/i_button_on_cadence_search_result_page")): Object: 'Object Repository/i_button_OR/i_button_on_cadence_search_result_page' is clicked on

2021-11-16 16:12:52 - [MESSAGE][PASSED] - Object: 'Object Repository/i_button_OR/i_button_on_cadence_search_result_page' is clicked on

2021-11-16 16:12:52 - [TEST_STEP][PASSED] - actualWord4 = xpath("//table[@class="drop-table"]/tbody/tr[3]/td[1]")).getText(): null

2021-11-16 16:12:52 - [TEST_STEP][PASSED] - expectedWord4 = "Document Type:": null

2021-11-16 16:12:52 - [TEST_STEP][PASSED] - isdocumentPresent4 = verifyMatch(actualWord4, expectedWord4, true): Actual text 'Document Type:' and expected text 'Document Type:' are matched  using regular expression

2021-11-16 16:12:52 - [MESSAGE][PASSED] - Actual text 'Document Type:' and expected text 'Document Type:' are matched  using regular expression

2021-11-16 16:12:52 - [TEST_STEP][PASSED] - if (isdocumentPresent4 == true): null

2021-11-16 16:12:52 - [TEST_STEP][PASSED] - actualWord5 = xpath("//table[@class="drop-table"]/tbody/tr[3]/td[2]")).getText(): null

2021-11-16 16:12:53 - [TEST_STEP][PASSED] - isdocumentPresent5 = actualWord5.contains(expectedWord5): null

2021-11-16 16:12:53 - [TEST_STEP][PASSED] - if (isdocumentPresent5 == true): null

2021-11-16 16:12:53 - [TEST_STEP][PASSED] - out.println("Document type is " + expectedWord5): null

2021-11-16 16:12:53 - [TEST_STEP][PASSED] - closeWindowIndex(1): Window with index 1 is closed

2021-11-16 16:12:53 - [MESSAGE][PASSED] - Window with index 1 is closed

2021-11-16 16:12:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-OptionsOfResources' successfully

2021-11-16 16:12:53 - [TEST_STEP][PASSED] - switchToWindowIndex(0): Switched to window with index: '0'

2021-11-16 16:12:53 - [MESSAGE][PASSED] - Switched to window with index: '0'

2021-11-16 16:12:53 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:12:53 - [TEST_STEP][PASSED] - xpath("//*[@id='second-search-section']/div[2]/div/div[1]/div[2]/div")).click(): null

2021-11-16 16:12:53 - [TEST_STEP][PASSED] - Thread.sleep(3000): null

2021-11-16 16:12:56 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-DynamicNavigationLinks"), ["FacetToCheck":Facet1ToCheck, "WordToBePresent":Word1ToBePresent, "DynamicLinks":DynamicLinks1, "LinkToCheck":PlatformLink5, ... ], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:12:56 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-DynamicNavigationLinks: Test Cases/CommonTestCases/TC-DynamicNavigationLinks

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - facetToBeChecked = driver.findElement(By.xpath(FacetToCheck)): null

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - isFacetVisible = facetToBeChecked.isDisplayed(): null

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - out.println(isFacetVisible): null

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - isMatchTrue = verifyMatch(WordToBePresent, facetToBeChecked.getAttribute("data-title"), false): Actual text 'All Platforms' and expected text 'All Platforms' are matched 

2021-11-16 16:12:59 - [MESSAGE][PASSED] - Actual text 'All Platforms' and expected text 'All Platforms' are matched 

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - out.println(isMatchTrue): null

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - isLinksVisible = xpath(DynamicLinks)).isDisplayed(): null

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - out.println(isLinksVisible): null

2021-11-16 16:12:59 - [TEST_STEP][PASSED] - actualTitle = xpath(LinkToCheck)).getAttribute("data-value"): null

2021-11-16 16:13:00 - [TEST_STEP][PASSED] - out.println(actualTitle): null

2021-11-16 16:13:00 - [TEST_STEP][PASSED] - xpath(LinkToCheck)).click(): null

2021-11-16 16:13:00 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area")): Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:13:02 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:13:02 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area"), WordToBePresent + ":"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:13:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:13:02 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location")): Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:13:03 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:13:03 - [TEST_STEP][PASSED] - istitleTrue = verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location"), actualTitle): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:13:03 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:13:03 - [TEST_STEP][PASSED] - out.println(istitleTrue): null

2021-11-16 16:13:03 - [TEST_STEP][PASSED] - highlightedTextinlink = driver.findElements(By.xpath("//div[@class = 'coveo-result-list-container coveo-list-layout-container']//a")): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - highlightedTextinPara = driver.findElements(By.xpath("//div[@data-helper='highlightStreamText']/span")): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - for ([i = 0, i < highlightedTextinPara.size(), (i++)]): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - else if (isitem2PresentinLink == true): null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - break: null

2021-11-16 16:13:04 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Clear_option")): Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:13:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:13:05 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:13:05 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-DynamicNavigationLinks"), ["FacetToCheck":Facet2ToCheck, "WordToBePresent":Word2ToBePresent, "DynamicLinks":DynamicLinks2, "LinkToCheck":ProductLink1, ... ], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:13:05 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-DynamicNavigationLinks: Test Cases/CommonTestCases/TC-DynamicNavigationLinks

2021-11-16 16:13:05 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:13:05 - [TEST_STEP][PASSED] - facetToBeChecked = driver.findElement(By.xpath(FacetToCheck)): null

2021-11-16 16:13:06 - [TEST_STEP][PASSED] - isFacetVisible = facetToBeChecked.isDisplayed(): null

2021-11-16 16:13:06 - [TEST_STEP][PASSED] - out.println(isFacetVisible): null

2021-11-16 16:13:06 - [TEST_STEP][PASSED] - isMatchTrue = verifyMatch(WordToBePresent, facetToBeChecked.getAttribute("data-title"), false): Actual text 'All Products' and expected text 'All Products' are matched 

2021-11-16 16:13:06 - [MESSAGE][PASSED] - Actual text 'All Products' and expected text 'All Products' are matched 

2021-11-16 16:13:06 - [TEST_STEP][PASSED] - out.println(isMatchTrue): null

2021-11-16 16:13:06 - [TEST_STEP][PASSED] - isLinksVisible = xpath(DynamicLinks)).isDisplayed(): null

2021-11-16 16:13:07 - [TEST_STEP][PASSED] - out.println(isLinksVisible): null

2021-11-16 16:13:07 - [TEST_STEP][PASSED] - actualTitle = xpath(LinkToCheck)).getAttribute("data-value"): null

2021-11-16 16:13:07 - [TEST_STEP][PASSED] - out.println(actualTitle): null

2021-11-16 16:13:07 - [TEST_STEP][PASSED] - xpath(LinkToCheck)).click(): null

2021-11-16 16:13:07 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area")): Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:13:10 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:13:10 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area"), WordToBePresent + ":"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:13:11 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:13:11 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location")): Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:13:11 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:13:11 - [TEST_STEP][PASSED] - istitleTrue = verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location"), actualTitle): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:13:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - out.println(istitleTrue): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - highlightedTextinlink = driver.findElements(By.xpath("//div[@class = 'coveo-result-list-container coveo-list-layout-container']//a")): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - highlightedTextinPara = driver.findElements(By.xpath("//div[@data-helper='highlightStreamText']/span")): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - for ([i = 0, i < highlightedTextinPara.size(), (i++)]): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - break: null

2021-11-16 16:13:12 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Clear_option")): Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:13:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:13:13 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:13:13 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-DynamicNavigationLinks"), ["FacetToCheck":Facet3ToCheck, "WordToBePresent":Word3ToBePresent, "DynamicLinks":DynamicLinks3, "LinkToCheck":TagLink1, "expectedsearchedText1":Text5, ... ], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:13:13 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-DynamicNavigationLinks: Test Cases/CommonTestCases/TC-DynamicNavigationLinks

2021-11-16 16:13:13 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:13:13 - [TEST_STEP][PASSED] - facetToBeChecked = driver.findElement(By.xpath(FacetToCheck)): null

2021-11-16 16:13:14 - [TEST_STEP][PASSED] - isFacetVisible = facetToBeChecked.isDisplayed(): null

2021-11-16 16:13:14 - [TEST_STEP][PASSED] - out.println(isFacetVisible): null

2021-11-16 16:13:14 - [TEST_STEP][PASSED] - isMatchTrue = verifyMatch(WordToBePresent, facetToBeChecked.getAttribute("data-title"), false): Actual text 'All Tags' and expected text 'All Tags' are matched 

2021-11-16 16:13:14 - [MESSAGE][PASSED] - Actual text 'All Tags' and expected text 'All Tags' are matched 

2021-11-16 16:13:14 - [TEST_STEP][PASSED] - out.println(isMatchTrue): null

2021-11-16 16:13:14 - [TEST_STEP][PASSED] - isLinksVisible = xpath(DynamicLinks)).isDisplayed(): null

2021-11-16 16:13:15 - [TEST_STEP][PASSED] - out.println(isLinksVisible): null

2021-11-16 16:13:15 - [TEST_STEP][PASSED] - actualTitle = xpath(LinkToCheck)).getAttribute("data-value"): null

2021-11-16 16:13:15 - [TEST_STEP][PASSED] - out.println(actualTitle): null

2021-11-16 16:13:15 - [TEST_STEP][PASSED] - xpath(LinkToCheck)).click(): null

2021-11-16 16:13:16 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area")): Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:13:17 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:13:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area"), WordToBePresent + ":"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:13:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:13:18 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location")): Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:13:18 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:13:18 - [TEST_STEP][PASSED] - istitleTrue = verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location"), actualTitle): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:13:19 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:13:19 - [TEST_STEP][PASSED] - out.println(istitleTrue): null

2021-11-16 16:13:19 - [TEST_STEP][PASSED] - highlightedTextinlink = driver.findElements(By.xpath("//div[@class = 'coveo-result-list-container coveo-list-layout-container']//a")): null

2021-11-16 16:13:19 - [TEST_STEP][PASSED] - highlightedTextinPara = driver.findElements(By.xpath("//div[@data-helper='highlightStreamText']/span")): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - for ([i = 0, i < highlightedTextinPara.size(), (i++)]): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - else if (isitem2PresentinLink == true): null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - break: null

2021-11-16 16:13:20 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Clear_option")): Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:13:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:13:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TC-05-VerifyErrorMessage" time="177.821" classname="Test Cases/TC-05-VerifyErrorMessage" status="PASSED">
         <system-out><![CDATA[2021-11-16 16:13:20 - [TEST_CASE][PASSED] - Test Cases/TC-05-VerifyErrorMessage: Test Cases/TC-05-VerifyErrorMessage

2021-11-16 16:13:24 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-OptionsOfResources"), ["OptionToCheck":ErrorMessageXpath, "WordToVerify":Word_1ToVerify, "expectedWord5":expectedWord_1], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-OptionsOfResources' successfully

2021-11-16 16:13:25 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-OptionsOfResources: Test Cases/CommonTestCases/TC-OptionsOfResources

2021-11-16 16:13:25 - [TEST_STEP][PASSED] - callTestCase(findTestCase("TC-01-VerifyLogin"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/TC-01-VerifyLogin' successfully

2021-11-16 16:13:25 - [TEST_CASE][PASSED] - Test Cases/TC-01-VerifyLogin: Test Cases/TC-01-VerifyLogin

2021-11-16 16:13:25 - [TEST_STEP][PASSED] - openBrowser(findTestData("Login_Credentials").getValue("Input URL", 1)): Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:13:25 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2021-11-16 16:13:26 - [MESSAGE][INFO] - Starting 'Chrome' driver

2021-11-16 16:13:26 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2021-11-16 16:13:32 - [MESSAGE][PASSED] - Browser is opened with url: 'https://hfx-cadence.cs197.force.com/UnifiedSSO/CadenceApplicationLoginScreen?appcode=cos&langcode=en'

2021-11-16 16:13:32 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/UserName_Field"), findTestData("Login_Credentials").getValue("User Name", 1)): Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:13:34 - [MESSAGE][PASSED] - Text 'auto_swhostiduser1.en@cssotest.com' is set on object 'Object Repository/Login_OR/UserName_Field'

2021-11-16 16:13:34 - [TEST_STEP][PASSED] - setText(findTestObject("Login_OR/Password_Field"), findTestData("Login_Credentials").getValue("Password", 1)): Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:13:35 - [MESSAGE][PASSED] - Text 'Cadence123' is set on object 'Object Repository/Login_OR/Password_Field'

2021-11-16 16:13:35 - [TEST_STEP][PASSED] - click(findTestObject("Login_OR/Login_Button_Field")): Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:13:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Login_OR/Login_Button_Field' is clicked on

2021-11-16 16:13:52 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Login_OR/UserLogo"), 0): Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:13:52 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2021-11-16 16:13:54 - [MESSAGE][PASSED] - Object 'Object Repository/Login_OR/UserLogo' is present

2021-11-16 16:13:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TC-01-VerifyLogin' successfully

2021-11-16 16:13:54 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2021-11-16 16:13:54 - [MESSAGE][PASSED] - Current window maximized

2021-11-16 16:13:54 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Resources_Dropdown_OR/Resources_option_location")): Object 'Object Repository/Resources_Dropdown_OR/Resources_option_location' is visible

2021-11-16 16:13:55 - [MESSAGE][PASSED] - Object 'Object Repository/Resources_Dropdown_OR/Resources_option_location' is visible

2021-11-16 16:13:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Resources_Dropdown_OR/Resources_option_location"), "Resources"): Actual text and expected text of test object 'Object Repository/Resources_Dropdown_OR/Resources_option_location' are matched.

2021-11-16 16:13:55 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Resources_Dropdown_OR/Resources_option_location' are matched.

2021-11-16 16:13:55 - [TEST_STEP][PASSED] - mouseOver(findTestObject("Resources_Dropdown_OR/Resources_option_location")): Object: 'Object Repository/Resources_Dropdown_OR/Resources_option_location' is hovered

2021-11-16 16:13:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Resources_Dropdown_OR/Resources_option_location' is hovered

2021-11-16 16:13:56 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:13:56 - [TEST_STEP][PASSED] - optionToBeChecked = driver.findElement(By.xpath(OptionToCheck)): null

2021-11-16 16:13:56 - [TEST_STEP][PASSED] - isOptionVisible = optionToBeChecked.isDisplayed(): null

2021-11-16 16:13:56 - [TEST_STEP][PASSED] - out.println(isOptionVisible): null

2021-11-16 16:13:56 - [TEST_STEP][PASSED] - isthewordPresent = getText().contains(WordToVerify): null

2021-11-16 16:13:56 - [TEST_STEP][PASSED] - out.println(isthewordPresent): null

2021-11-16 16:13:56 - [TEST_STEP][PASSED] - optionToBeChecked.click(): null

2021-11-16 16:14:00 - [TEST_STEP][PASSED] - actualTitle = getWindowTitle(): Current window's title is: 'Error Messages'

2021-11-16 16:14:00 - [MESSAGE][PASSED] - Current window's title is: 'Error Messages'

2021-11-16 16:14:00 - [TEST_STEP][PASSED] - verifyMatch(actualTitle, WordToVerify, true): Actual text 'Error Messages' and expected text 'Error Messages' are matched  using regular expression

2021-11-16 16:14:00 - [MESSAGE][PASSED] - Actual text 'Error Messages' and expected text 'Error Messages' are matched  using regular expression

2021-11-16 16:14:00 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/SearchCustomHeader_location"), WordToVerify): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:14:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/SearchCustomHeader_location' are matched.

2021-11-16 16:14:00 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:14:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:14:01 - [TEST_STEP][PASSED] - thirdRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")): null

2021-11-16 16:14:01 - [TEST_STEP][PASSED] - documentColumn = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[2]")): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - totalcms = thirdRow.size(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(totalcms): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms, (i++)]): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - expectedWord = "Document type:": null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - actualWord = getText().toString(): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - isdocumentPresent = verifyMatch(actualWord, expectedWord, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - if (isdocumentPresent == true): null

2021-11-16 16:14:02 - [TEST_STEP][PASSED] - ithdocumentColumn = get(i).getText(): null

2021-11-16 16:14:03 - [TEST_STEP][PASSED] - isitTrue = ithdocumentColumn.contains(WordToVerify): null

2021-11-16 16:14:03 - [TEST_STEP][PASSED] - out.println(isitTrue): null

2021-11-16 16:14:03 - [TEST_STEP][PASSED] - if (isitTrue == true): null

2021-11-16 16:14:03 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:14:03 - [TEST_STEP][PASSED] - out.println(WordToVerify + " Word is not present"): null

2021-11-16 16:14:03 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:14:18 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:14:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:14:18 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Modified_Date_location")): Object 'Object Repository/Search_Result_Page_OR/Modified_Date_location' is visible

2021-11-16 16:14:19 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Modified_Date_location' is visible

2021-11-16 16:14:19 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Modified_Date_location"), "data-field", "@sflastmodifieddate", 10): Object 'Object Repository/Search_Result_Page_OR/Modified_Date_location' has attribute 'data-field' with value '@sflastmodifieddate'

2021-11-16 16:14:19 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Modified_Date_location' has attribute 'data-field' with value '@sflastmodifieddate'

2021-11-16 16:14:19 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Relevance_button_location")): Object 'Object Repository/Search_Result_Page_OR/Relevance_button_location' is visible

2021-11-16 16:14:20 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Relevance_button_location' is visible

2021-11-16 16:14:20 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Date_button_location")): Object 'Object Repository/Search_Result_Page_OR/Date_button_location' is visible

2021-11-16 16:14:20 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Date_button_location' is visible

2021-11-16 16:14:20 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("Search_Result_Page_OR/Date_button_location"), "aria-checked", "true", 10): Object 'Object Repository/Search_Result_Page_OR/Date_button_location' has attribute 'aria-checked' with value 'true'

2021-11-16 16:14:21 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Date_button_location' has attribute 'aria-checked' with value 'true'

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - dates = driver.findElements(By.xpath("//*[@id='coveo-result-list1']/div[2]/div/div/div/div/div[1]/div[2]/span/span")): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - for ([i = 0, i < dates.size() - 1, (i++)]): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:21 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate1 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - formatter1 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date1 = formatter1.parse(sDate1): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - sDate2 = getText().toString(): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - date2 = formatter1.parse(sDate2): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - if (date1.compareTo(date2) >= 0): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - out.println("date 1 is greater than or equal to date 2"): null

2021-11-16 16:14:22 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:14:37 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Date_button_location")): Object: 'Object Repository/Search_Result_Page_OR/Date_button_location' is clicked on

2021-11-16 16:14:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Date_button_location' is clicked on

2021-11-16 16:14:38 - [TEST_STEP][PASSED] - dates1 = driver.findElements(By.xpath("//*[@id='coveo-result-list1']/div[2]/div/div/div/div/div[1]/div[2]/span/span")): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - for ([i = 0, i < dates1.size() - 1, (i++)]): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate1 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - formatter2 = new java.text.SimpleDateFormat((dd MMM yyyy)): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate1 = formatter2.parse(aDate1): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - j = i + 1: null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - aDate2 = getText().toString(): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - adate2 = formatter2.parse(aDate2): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - if (adate1.compareTo(adate2) <= 0): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - out.println("date 1 is less than or equal to date 2"): null

2021-11-16 16:14:40 - [TEST_STEP][PASSED] - Thread.sleep(15000): null

2021-11-16 16:14:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Date_button_location")): Object: 'Object Repository/Search_Result_Page_OR/Date_button_location' is clicked on

2021-11-16 16:14:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Date_button_location' is clicked on

2021-11-16 16:14:56 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Searchbox_in_search_result_page")): Object 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page' is visible

2021-11-16 16:14:57 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page' is visible

2021-11-16 16:14:57 - [TEST_STEP][PASSED] - setText(findTestObject("Search_Result_Page_OR/Searchbox_in_search_result_page"), "cadence"): Text 'cadence' is set on object 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page'

2021-11-16 16:14:58 - [MESSAGE][PASSED] - Text 'cadence' is set on object 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page'

2021-11-16 16:14:58 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Search_Result_Page_OR/Searchbox_in_search_result_page"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page'

2021-11-16 16:14:59 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Search_Result_Page_OR/Searchbox_in_search_result_page'

2021-11-16 16:14:59 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Search_Result_Page_OR/Search_Area"), 5): Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:15:00 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Search_Area' is visible

2021-11-16 16:15:00 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:15:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:15:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button"), "Hide all attributes"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:15:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:15:01 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Search_Result_Page_OR/Attribute_Table_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is visible

2021-11-16 16:15:02 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is visible

2021-11-16 16:15:02 - [TEST_STEP][PASSED] - firstRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes']//div[2]//tr[1]/th")): null

2021-11-16 16:15:02 - [TEST_STEP][PASSED] - secondRow = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[2]/td[1]")): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - thirdRow1 = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - documentColumn1 = driver.findElements(By.xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[2]")): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - totalcms1 = firstRow.size(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - out.println(totalcms1): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms1, (i++)]): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:03 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord1 = "Product(s):": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord1 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent1 = verifyMatch(actualWord1, expectedWord1, false): Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Product(s):' and expected text 'Product(s):' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - totalcms2 = secondRow.size(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - out.println(totalcms2): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms2, (i++)]): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:04 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord2 = "Article Number:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord2 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent2 = verifyMatch(actualWord2, expectedWord2, false): Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Article Number:' and expected text 'Article Number:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - totalcms3 = thirdRow1.size(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(totalcms3): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - for ([i = 0, i < totalcms3, (i++)]): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:05 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - expectedWord3 = "Document type:": null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - actualWord3 = getText().toString(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - isdocumentPresent3 = verifyMatch(actualWord3, expectedWord3, false): Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [MESSAGE][PASSED] - Actual text 'Document type:' and expected text 'Document type:' are matched 

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (isdocumentPresent3 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - ithdocumentColumn1 = get(i).getText(): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - configurationWord1 = ithdocumentColumn1.contains(WordToVerify): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - if (configurationWord1 == true): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - out.println(WordToVerify + " word is not present"): null

2021-11-16 16:15:06 - [TEST_STEP][PASSED] - Thread.sleep(20000): null

2021-11-16 16:15:26 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button")): Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:15:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' is clicked on

2021-11-16 16:15:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Search_Result_Page_OR/ShowAllAttribute_button"), "Show all attributes"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:15:27 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/ShowAllAttribute_button' are matched.

2021-11-16 16:15:27 - [TEST_STEP][PASSED] - verifyElementNotVisible(findTestObject("Search_Result_Page_OR/Attribute_Table_location"), STOP_ON_FAILURE): Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is NOT visible

2021-11-16 16:15:28 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Attribute_Table_location' is NOT visible

2021-11-16 16:15:28 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-i-button"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-i-button' successfully

2021-11-16 16:15:28 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-i-button: Test Cases/CommonTestCases/TC-i-button

2021-11-16 16:15:28 - [TEST_STEP][PASSED] - currentResultPerPage = getText().toInteger(): null

2021-11-16 16:15:28 - [TEST_STEP][PASSED] - out.println(currentResultPerPage): null

2021-11-16 16:15:28 - [TEST_STEP][PASSED] - click(findTestObject("i_button_OR/1st_i_button_location")): Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:15:29 - [MESSAGE][PASSED] - Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:15:29 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("i_button_OR/1st_attribute_table_location")): Object 'Object Repository/i_button_OR/1st_attribute_table_location' is visible

2021-11-16 16:15:29 - [MESSAGE][PASSED] - Object 'Object Repository/i_button_OR/1st_attribute_table_location' is visible

2021-11-16 16:15:29 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:15:29 - [TEST_STEP][PASSED] - expectedValue = false: null

2021-11-16 16:15:29 - [TEST_STEP][PASSED] - for ([i = 1, i <= currentResultPerPage - 1, (i++)]): null

2021-11-16 16:15:29 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:30 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:31 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:32 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:33 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:34 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:35 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:36 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:37 - [TEST_STEP][PASSED] - actualValue = get(i).isDisplayed(): null

2021-11-16 16:15:38 - [TEST_STEP][PASSED] - out.println(actualValue): null

2021-11-16 16:15:38 - [TEST_STEP][PASSED] - b = Boolean.compare(expectedValue, actualValue): null

2021-11-16 16:15:38 - [TEST_STEP][PASSED] - if (b == 0): null

2021-11-16 16:15:38 - [TEST_STEP][PASSED] - out.println("Both values are equal"): null

2021-11-16 16:15:38 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-i-button' successfully

2021-11-16 16:15:38 - [TEST_STEP][PASSED] - product = xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes']//div[2]//tr[1]/th")).isDisplayed(): null

2021-11-16 16:15:38 - [TEST_STEP][PASSED] - articleNumber = xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[2]/td[1]")).isDisplayed(): null

2021-11-16 16:15:38 - [TEST_STEP][PASSED] - documentType = xpath("//div[@class = 'coveo-result-row coveo-custom-result-attributes' ]//div[2]//tr[3]/td[1]")).isDisplayed(): null

2021-11-16 16:15:39 - [TEST_STEP][PASSED] - out.println(product): null

2021-11-16 16:15:39 - [TEST_STEP][PASSED] - out.println(articleNumber): null

2021-11-16 16:15:39 - [TEST_STEP][PASSED] - out.println(documentType): null

2021-11-16 16:15:39 - [TEST_STEP][PASSED] - Thread.sleep(6000): null

2021-11-16 16:15:45 - [TEST_STEP][PASSED] - click(findTestObject("i_button_OR/1st_i_button_location")): Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:15:45 - [MESSAGE][PASSED] - Object: 'Object Repository/i_button_OR/1st_i_button_location' is clicked on

2021-11-16 16:15:45 - [TEST_STEP][PASSED] - linkTitle = getText(findTestObject("Object Repository/Search_Result_Page_OR/Search_Area")): Text of object 'Object Repository/Search_Result_Page_OR/Search_Area' is: 'Cadence Help Error - CDNSHLP-018'

2021-11-16 16:15:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Search_Area' is: 'Cadence Help Error - CDNSHLP-018'

2021-11-16 16:15:46 - [TEST_STEP][PASSED] - click(findTestObject("Search_Result_Page_OR/Search_Area")): Object: 'Object Repository/Search_Result_Page_OR/Search_Area' is clicked on

2021-11-16 16:15:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Search_Area' is clicked on

2021-11-16 16:15:47 - [TEST_STEP][PASSED] - switchToWindowIndex(1): Switched to window with index: '1'

2021-11-16 16:15:47 - [MESSAGE][PASSED] - Switched to window with index: '1'

2021-11-16 16:15:47 - [TEST_STEP][PASSED] - windowTitle = getWindowTitle(): Current window's title is: 'Cadence Help Error - CDNSHLP-018'

2021-11-16 16:15:51 - [MESSAGE][PASSED] - Current window's title is: 'Cadence Help Error - CDNSHLP-018'

2021-11-16 16:15:51 - [TEST_STEP][PASSED] - verifyMatch(windowTitle, linkTitle, true): Actual text 'Cadence Help Error - CDNSHLP-018' and expected text 'Cadence Help Error - CDNSHLP-018' are matched  using regular expression

2021-11-16 16:15:51 - [MESSAGE][PASSED] - Actual text 'Cadence Help Error - CDNSHLP-018' and expected text 'Cadence Help Error - CDNSHLP-018' are matched  using regular expression

2021-11-16 16:15:51 - [TEST_STEP][PASSED] - actualpageheadText = getText(findTestObject("Object Repository/Search_Result_Page_OR/Pagehead_location")): Text of object 'Object Repository/Search_Result_Page_OR/Pagehead_location' is: 'Cadence Help Error - CDNSHLP-018'

2021-11-16 16:15:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Search_Result_Page_OR/Pagehead_location' is: 'Cadence Help Error - CDNSHLP-018'

2021-11-16 16:15:52 - [TEST_STEP][PASSED] - verifyMatch(actualpageheadText, linkTitle, true): Actual text 'Cadence Help Error - CDNSHLP-018' and expected text 'Cadence Help Error - CDNSHLP-018' are matched  using regular expression

2021-11-16 16:15:52 - [MESSAGE][PASSED] - Actual text 'Cadence Help Error - CDNSHLP-018' and expected text 'Cadence Help Error - CDNSHLP-018' are matched  using regular expression

2021-11-16 16:15:52 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/i_button_OR/i_button_on_cadence_search_result_page")): Object: 'Object Repository/i_button_OR/i_button_on_cadence_search_result_page' is clicked on

2021-11-16 16:15:53 - [MESSAGE][PASSED] - Object: 'Object Repository/i_button_OR/i_button_on_cadence_search_result_page' is clicked on

2021-11-16 16:15:53 - [TEST_STEP][PASSED] - actualWord4 = xpath("//table[@class="drop-table"]/tbody/tr[3]/td[1]")).getText(): null

2021-11-16 16:15:53 - [TEST_STEP][PASSED] - expectedWord4 = "Document Type:": null

2021-11-16 16:15:53 - [TEST_STEP][PASSED] - isdocumentPresent4 = verifyMatch(actualWord4, expectedWord4, true): Actual text 'Document Type:' and expected text 'Document Type:' are matched  using regular expression

2021-11-16 16:15:53 - [MESSAGE][PASSED] - Actual text 'Document Type:' and expected text 'Document Type:' are matched  using regular expression

2021-11-16 16:15:53 - [TEST_STEP][PASSED] - if (isdocumentPresent4 == true): null

2021-11-16 16:15:53 - [TEST_STEP][PASSED] - actualWord5 = xpath("//table[@class="drop-table"]/tbody/tr[3]/td[2]")).getText(): null

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - isdocumentPresent5 = actualWord5.contains(expectedWord5): null

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - if (isdocumentPresent5 == true): null

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - else: null

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - out.println("Document type is not" + expectedWord5): null

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - closeWindowIndex(1): Window with index 1 is closed

2021-11-16 16:15:54 - [MESSAGE][PASSED] - Window with index 1 is closed

2021-11-16 16:15:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-OptionsOfResources' successfully

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - switchToWindowIndex(0): Switched to window with index: '0'

2021-11-16 16:15:54 - [MESSAGE][PASSED] - Switched to window with index: '0'

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - xpath("//*[@id='second-search-section']/div[2]/div/div[1]/div[2]/div")).click(): null

2021-11-16 16:15:54 - [TEST_STEP][PASSED] - Thread.sleep(3000): null

2021-11-16 16:15:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-DynamicNavigationLinks"), ["FacetToCheck":Facet_1ToCheck, "WordToBePresent":Word_1ToBePresent, "DynamicLinks":DynamicLinks_1, "LinkToCheck":PlatformLink_4, ... ], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:15:57 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-DynamicNavigationLinks: Test Cases/CommonTestCases/TC-DynamicNavigationLinks

2021-11-16 16:15:57 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:15:57 - [TEST_STEP][PASSED] - facetToBeChecked = driver.findElement(By.xpath(FacetToCheck)): null

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - isFacetVisible = facetToBeChecked.isDisplayed(): null

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - out.println(isFacetVisible): null

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - isMatchTrue = verifyMatch(WordToBePresent, facetToBeChecked.getAttribute("data-title"), false): Actual text 'All Platforms' and expected text 'All Platforms' are matched 

2021-11-16 16:15:58 - [MESSAGE][PASSED] - Actual text 'All Platforms' and expected text 'All Platforms' are matched 

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - out.println(isMatchTrue): null

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - isLinksVisible = xpath(DynamicLinks)).isDisplayed(): null

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - out.println(isLinksVisible): null

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - actualTitle = xpath(LinkToCheck)).getAttribute("data-value"): null

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - out.println(actualTitle): null

2021-11-16 16:15:58 - [TEST_STEP][PASSED] - xpath(LinkToCheck)).click(): null

2021-11-16 16:15:59 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area")): Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:16:01 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:16:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area"), WordToBePresent + ":"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:16:01 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:16:01 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location")): Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:16:02 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:16:02 - [TEST_STEP][PASSED] - istitleTrue = verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location"), actualTitle): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:16:02 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:16:02 - [TEST_STEP][PASSED] - out.println(istitleTrue): null

2021-11-16 16:16:02 - [TEST_STEP][PASSED] - highlightedTextinlink = driver.findElements(By.xpath("//div[@class = 'coveo-result-list-container coveo-list-layout-container']//a")): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - highlightedTextinPara = driver.findElements(By.xpath("//div[@data-helper='highlightStreamText']/span")): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - for ([i = 0, i < highlightedTextinPara.size(), (i++)]): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - else if (isitem2PresentinLink == true): null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - break: null

2021-11-16 16:16:03 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Clear_option")): Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:16:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:16:04 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:16:04 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-DynamicNavigationLinks"), ["FacetToCheck":Facet_2ToCheck, "WordToBePresent":Word_2ToBePresent, "DynamicLinks":DynamicLinks_2, "LinkToCheck":ProductLink_1, ... ], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:16:04 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-DynamicNavigationLinks: Test Cases/CommonTestCases/TC-DynamicNavigationLinks

2021-11-16 16:16:04 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:16:04 - [TEST_STEP][PASSED] - facetToBeChecked = driver.findElement(By.xpath(FacetToCheck)): null

2021-11-16 16:16:05 - [TEST_STEP][PASSED] - isFacetVisible = facetToBeChecked.isDisplayed(): null

2021-11-16 16:16:05 - [TEST_STEP][PASSED] - out.println(isFacetVisible): null

2021-11-16 16:16:05 - [TEST_STEP][PASSED] - isMatchTrue = verifyMatch(WordToBePresent, facetToBeChecked.getAttribute("data-title"), false): Actual text 'All Products' and expected text 'All Products' are matched 

2021-11-16 16:16:05 - [MESSAGE][PASSED] - Actual text 'All Products' and expected text 'All Products' are matched 

2021-11-16 16:16:05 - [TEST_STEP][PASSED] - out.println(isMatchTrue): null

2021-11-16 16:16:05 - [TEST_STEP][PASSED] - isLinksVisible = xpath(DynamicLinks)).isDisplayed(): null

2021-11-16 16:16:05 - [TEST_STEP][PASSED] - out.println(isLinksVisible): null

2021-11-16 16:16:05 - [TEST_STEP][PASSED] - actualTitle = xpath(LinkToCheck)).getAttribute("data-value"): null

2021-11-16 16:16:06 - [TEST_STEP][PASSED] - out.println(actualTitle): null

2021-11-16 16:16:06 - [TEST_STEP][PASSED] - xpath(LinkToCheck)).click(): null

2021-11-16 16:16:06 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area")): Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:16:08 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:16:08 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area"), WordToBePresent + ":"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:16:09 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:16:09 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location")): Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:16:09 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:16:09 - [TEST_STEP][PASSED] - istitleTrue = verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location"), actualTitle): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:16:10 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(istitleTrue): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - highlightedTextinlink = driver.findElements(By.xpath("//div[@class = 'coveo-result-list-container coveo-list-layout-container']//a")): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - highlightedTextinPara = driver.findElements(By.xpath("//div[@data-helper='highlightStreamText']/span")): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - for ([i = 0, i < highlightedTextinPara.size(), (i++)]): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:10 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - else if (isitem2PresentinLink == true): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - break: null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Clear_option")): Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:16:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:16:11 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CommonTestCases/TC-DynamicNavigationLinks"), ["FacetToCheck":Facet_3ToCheck, "WordToBePresent":Word_3ToBePresent, "DynamicLinks":DynamicLinks_3, "LinkToCheck":TagLink_2, ... ], STOP_ON_FAILURE): Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully

2021-11-16 16:16:11 - [TEST_CASE][PASSED] - Test Cases/CommonTestCases/TC-DynamicNavigationLinks: Test Cases/CommonTestCases/TC-DynamicNavigationLinks

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2021-11-16 16:16:11 - [TEST_STEP][PASSED] - facetToBeChecked = driver.findElement(By.xpath(FacetToCheck)): null

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - isFacetVisible = facetToBeChecked.isDisplayed(): null

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - out.println(isFacetVisible): null

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - isMatchTrue = verifyMatch(WordToBePresent, facetToBeChecked.getAttribute("data-title"), false): Actual text 'All Tags' and expected text 'All Tags' are matched 

2021-11-16 16:16:13 - [MESSAGE][PASSED] - Actual text 'All Tags' and expected text 'All Tags' are matched 

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - out.println(isMatchTrue): null

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - isLinksVisible = xpath(DynamicLinks)).isDisplayed(): null

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - out.println(isLinksVisible): null

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - actualTitle = xpath(LinkToCheck)).getAttribute("data-value"): null

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - out.println(actualTitle): null

2021-11-16 16:16:13 - [TEST_STEP][PASSED] - xpath(LinkToCheck)).click(): null

2021-11-16 16:16:14 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area")): Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:16:15 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' is visible

2021-11-16 16:16:15 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area"), WordToBePresent + ":"): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:16:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Coveo_breadcrumb_item_area' are matched.

2021-11-16 16:16:16 - [TEST_STEP][PASSED] - verifyElementVisible(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location")): Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:16:16 - [MESSAGE][PASSED] - Object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' is visible

2021-11-16 16:16:16 - [TEST_STEP][PASSED] - istitleTrue = verifyElementText(findTestObject("Object Repository/Search_Result_Page_OR/Selected_Platform_value_location"), actualTitle): Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:16:17 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Search_Result_Page_OR/Selected_Platform_value_location' are matched.

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(istitleTrue): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - highlightedTextinlink = driver.findElements(By.xpath("//div[@class = 'coveo-result-list-container coveo-list-layout-container']//a")): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - highlightedTextinPara = driver.findElements(By.xpath("//div[@data-helper='highlightStreamText']/span")): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - for ([i = 0, i < highlightedTextinPara.size(), (i++)]): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem1PresentinLink = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:17 - [TEST_STEP][PASSED] - isitem2PresentinLink = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - isitem1PresentinPara = getText().contains(expectedsearchedText1): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - isitem2PresentinPara = getText().contains(expectedsearchedText2): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - out.println(isitem1PresentinLink): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - out.println(isitem2PresentinLink): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - out.println(isitem1PresentinPara): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - out.println(isitem2PresentinPara): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - if (isitem1PresentinLink == true): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - else if (isitem2PresentinLink == true): null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - break: null

2021-11-16 16:16:18 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Search_Result_Page_OR/Clear_option")): Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:16:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Search_Result_Page_OR/Clear_option' is clicked on

2021-11-16 16:16:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CommonTestCases/TC-DynamicNavigationLinks' successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2021-11-16 16:04:52 - [TEST_SUITE][PASSED] - TestSuite_5: Test Cases/TC-05-VerifyErrorMessage]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
